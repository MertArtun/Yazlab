 The Edge is an exciting place full of new technologies or existing technologies that are being brought together in new and exciting ways. This really is a melting pot of technology at the Edge. This episode of the Tech Field Day podcast features Jon Osmond, Guy Currier, Ivan McPhee and myself, Alistair Cook, describing the melting pot that is Edge Computing. Welcome to the Tech Field Day podcast where we bring together a group of IT technical experts to discuss a single topic about key concepts in the industry. This podcast features a variety of perspectives from members of the Tech Field Day delicate community and is often recorded in association with our Tech Field Day events. Tech Field Day is a part of the Futurum Group and this podcast is also published with our sister company Tech Strong TV. In this episode of the podcast, recorded live at Edge Field Day, we'll be discussing the premise. The Edge is the new melting pot of technology. Before the discussion, let's meet who's on the panel today. Ivan McPhee, I'm delighted to have you on this panel at your very first Tech Field Day event. Tell us just a little bit about yourself. Thanks a lot for having me. I really appreciate it. Great to meet everybody and to be able to be part of this day. I'm Ivan McPhee. I'm an analyst with GigaOM. I'm focused on the security and networking sectors. And John. My name is John Osman. I'm from Albuquerque, New Mexico. I'm a consultant. I primarily work with networking and interconnection and things of that nature in the hinterlands. And Guy? Guy Currier. I'm CTO of Visible Impact and you can see my work at FuturumGroup.com. I think this idea that the Edge is a melting pot of technologies is something that we've seen as we've been experiencing the presentations here at Edge Field Day. Now, we're at the end of day one. We've had three of the presentations. I'm sure we'll see more of the melting pot next week. But we've already seen the melding of having containers for your applications along with using those containers to deploy virtual machines out at the Edge. And so we're seeing a variety of technologies there. We saw things like machine learning being actually operated on very small Edge devices. Now, I really liked that the example given was a conventional AI where it was image recognition using open CV inside of frigate. Some of the tools that you might have been using for some time to build actual AI applications long before this large language model came along and vastly increased our resource needs. But then we saw a vast amount of resource being delivered out into an Edge. We saw the ability to add huge amounts of storage and huge amounts of offload for AI to your existing Edge hosts. And so we saw quite a lot of different technologies being glued together to answer a variety of different requirements. John, you're particularly focused on networking. Do you see that sort of networking stack getting pushed into the Edge components and being glued together? I do at times. It's a little difficult sometimes in some of the smaller cities in rural areas that don't have a lot of connectivity. And a number of the places are starting to get a lot of grant money and things of that nature to build out middle mile pieces and some last mile into their into the cities. And one of the pieces we keep seeing are people wanting to push some of the applications into data centers that are near these people because a lot of it is agriculture, some of the precision agriculture work that's going on right now where the turnaround time of being able to take a picture of a plant, turn around and tell whether it's a weed or not, very quickly is very important. And if you have to ship it off from rural New Mexico to Chicago for that work to get done, the answer won't get that fast enough. There's a whole melding together there of a John Deere, not the conventional tractor, but a robotic tractor and a whole bunch of lasers. So this is the awesome part of what's going on out at some of the edges. We're not going to use chemicals to deal with weeds. We're going to zap them with lasers. Guy, would you like to be zapped with a laser today? Sure. Just as soon as I identify whether that plant is a weed or not, you can zap away. I think the melting pot idea is a really good way to think of the edge because I think there are, you just described one, to my mind, one force that is a half of the melting pot, which is the classic edge scenario of unusual conditions, extreme conditions, not under a desk, not in a data center, not cooled properly or normally or any of that sort of thing, on the one hand. And then on the other hand, what you didn't mention is there's a lot more flexibility that we see in platform architecture, form factor and so forth. Some of the form factor is required by the conditions, but the other thing is that there seem to be a lot more, there's a lot more of an ability to build proprietary platforms. You don't have to worry as much, you know, just thinking of the processor as it being x86 or ARM or anything else. We've seen a lot more variety there. So you put those together and that is the melting pot for different looking, even a, you know, a full rack cluster out in the field might be significantly different from anything you'd seen in data center. And the vendors are finding ways to still allow those to interface back into the core. Yeah. I actually did, I agree and disagree with you. I wouldn't actually call the edge in melting for all. I think what we're basically doing is we're actually just shifting stuff, we shifted from the data center to the cloud, now we're shifting it to the edge because it changed in the form factor. But in the end, we're still doing the same stuff. We're just doing it faster because it's closer to the source of the where the data is initially collected. So I wouldn't necessarily say it's a melting pot, I would just say we're just redistributing what we already have and finding different ways to manage it. Is that just part of the 50-year cycle of the, you know, centralized computing to distribute it and going back to centralized and we're getting distributed again? Well, they're all going over your networks. So where's the problem, the problem has to do with latency, bandwidth, availability, that sort of thing. One of the things that I've always complained about mobile apps, for example, is that so many of them seem to be developed with this idea that they're, you're getting, you know, at least two bars on some local tower and the reality of it is that that's not the case even today. So there are a lot of shifting conditions that I think Ivan necessitate design changes in the systems themselves and that causes them to diverge and be more, be more diverse in the edge. That is not the same thing to me at all of this shifting back and forth. Well, I would be, question is what piece of the edge is the most important? Is it the, is it the interconnection? Because if it is the interconnection, if you're talking about a cell provider, most of the time your handset is being backhauled to a major city anyway. So if you're trying to rely on cellular systems, you're not getting the latency benefit of having things local and on, you know, at the edge. But are we seeing that there is the, again, the melting pot, this idea that the mobile devices are actually melding with the devices at the edge. And so you're getting something that has a mobile device architecture, it'll often have a mobile devices CPU and may well have the offloads from mobile device, right? Modern mobile devices do AI locally. Yet we're trying to deliver things that we used to deliver in the cloud to Ivan's point, we're bringing these things together, but having to make changes to them as well, because of course, you throw things into a melting pot, they lose their own shape and they assume the shape of the pot. And the problem we're trying to solve here is not one of, we've got a very small number of huge clusters. And this is absolutely a vast of stories. You're not managing a single huge cluster or a small number of huge clusters. And so the tools that are good for managing a single huge cluster are terrible for managing a massively distributed collection of things that probably don't even need to be clusters. So we definitely see this, there's a different set of requirements that are going to drive a different set of solutions. But are we seeing the elements that make up these solutions getting melted together as the software and the hardware getting glued together more as the connectivity and the user interfaces getting glued, which bits are melting together into this weird crowd? Melting them into the same pot just grinds me that, you know, through the years, Moore's Law has given us infinite computing for all intents and purposes and infinite and infinite memory. Everything we've been doing has just been, you know, nobody cares about the individual cycles anymore, because we've got so many of them, they just throw things at that. So if we go further, is the edge going to be into your phone? Are we going to start having people that were dedicating parts of our phone to, you know, to somebody's use so that they can push that edge piece to us when we when we subscribe to their services? I see in the end, the edge is totally dependent upon the network. So as far as I'm concerned, the more you push things out and presses on the edge, the more important the network becomes. And we even see a lot of applications that were in the cloud being taken back into the data center in order to power things at the edge. So therefore, the network becomes the key thing. And in the end, every single edge device purely becomes an endpoint, delivering certain capabilities, which in the end is dependent upon the network to be able to present a big picture for organization. And yet we want our applications to still run at that edge when a snowstorm comes in and takes out all of our fixed line networking. And all of the cellular networks are then overloaded by people trying to contact one another or those cell sites go down because they're covered in ice. And so one of the characteristics we see at edge, though, is the need for autonomous disconnected operation, survivability. So not a dependence on something that's in the cloud and the data center for selling another gallon of gas, because you've got to fill up your generator at this time. Hopefully you got your generator filled earlier, filled early. But if you've got no diesel, no petrol left in your generator, you need to be able to buy petrol in the middle of the snowstorm. And if it relies on the network being up. Well, that's why I really enjoyed Chris's illustration this morning about his child. His child was at home, you know, used to have to make sure it's he brushes teeth before he went to school, had all his books packed, that sort of thing. Now as a university, it's a case of you don't brush your teeth, you won't get the girlfriend. If you don't actually do your homework, you'll want to pass your pass the syllabus, right? And then so therefore, we sort of move stuff out of the data center to the edge. Yes, survivability is important. But in the end, survivability is only there for a limited period of time. And then the connectivity has to resume in order for us to be able to have something that really works. But to me, what necessitates this melting pot approach? Well, let me ask you, Jens, a question. The applications, you know, categorized as edge applications, would you say that they are more stringent in their requirements ultimately, in order to run properly compared to any applications or generally applications that can just run in the cloud or run in the data center? Are there more requirements for edge applications? I don't have very much dependence upon the sector, right? So if you look at industry, you look at manufacturing, you look at 24 hour manufacturing, for instance, yes, there has to be stringent requirements for those things. But that's not applicable for all things. For instance, you go back to the illustration about having a look at crops, okay? The latency requirements for that is a lot less than in manufacturing plant. And so therefore, all the pens are pointing exactly what the application is and the sector that's using it. My contention is that with the additional requirements, the physical requirements, security requirements, connectivity requirements, some of which may be low, but there's still requirements. You're sort of having this piling on of requirements. That's what drives the melting pot. But I guess what you're saying, Ivan, is that it does drive the melting pot in some cases, but it does not drive any kind of melting pot in others. So there you have the answer to the question, both yes and no. This is a perfect podcast. So we're returning to the consultant's answer of yes, but it depends. Yeah, very good. Very good. I just observe this diversity of platform, both software platform and hardware platform, including networking, that I don't feel exists as much in either the cloud or the data center where there's a certain drive towards uniformity, just for management purposes, management and operation purposes. There's the same drive towards uniformity in an edge application. It's just that the limits of that are greater because of those requirements. But I guess to your point, that doesn't apply in, you know, as generally as I thought. Well, that's one of the one of the vendors that presented the Avastra. That's why I really enjoyed what they presented, because it allows you to be able to come up with a certain level of uniformity based on containerization and push that out to the edge and manage it. It comes from the containerization, and then that's a hurdle for you to go over. But once you've gone there, that's not a melting pot, I would agree. So one of the things for the vendors that's presenting for us tomorrow, our time, of course, last week, your time, Zadita. And they're definitely an organization where there's this real tight coupling between the hardware that's deployed out and the actual hardware configuration and the applications that have been delivered on top of them. So I think tomorrow we're going to get more of that story around how they melded together these different pieces and how interdependent at these edge locations. But is that what we're really trying to look for? We have general purpose CPUs. We should be using them for general purposes. Any CPU should be able to run any of these containers that we want to run. I don't care if it's an ARM, I don't care if it's RISC-5, I don't care if it's X86, it ought to be able to run these things for them. And we ought to just have generic devices that maybe we give them part of our phone, like I said earlier. Maybe it's a piece of somebody's car when you're driving around that you've got some excess computing capacity. That's the world of the edge. And that's a melting pot more than anything I've ever seen in my life. The idea of just using whatever resources are available at the time. It'd be amazing to get a faster response to the judgment of whether that's a weed or not because somebody is driving a Tesla past your field at the time. Well, that's also one of the things I appreciate about LaVassa. They had the ability to be able to do discovery of all the devices on the network and based on the configuration of that device determine which edge applications could be deployed on that device. And I really think that's what we're looking for in the end because in the end we don't want to have to go and deploy lots of new edge devices. If we've got Cots server sitting out there, let's reuse them. Don't bring in something new when what's old will do well enough. And so therefore by actually having that discovery capability and then backtracking it to exactly what can be delivered on it is a huge advantage to organizations that attribute them. So you're looking for a converged platform that is allowing us to just deliver applications without so much of a dictation of what's actually in the remote sites. I would call Stephen talking about Foskitt. Stephen Foskitt, our founder, talking about the days before commodity hardware, where every application that was being deployed out to a retail location had its own server and its own connection, those things have definitely been melted together into this commodity platform for running applications. We're definitely seeing more containerization as another way of melding them together. That to me is really the pendulum swing. I mean, I think the grand pendulum swing in this industry is more or less between infrastructure and application. The center of gravity for the center of gravity for, well, applications, I guess the center of gravity for the stack, the center of gravity for decision making is the application software developer adapting to the new capabilities of the platform or the platforms enabling new software models. That's what containerization is supposed to do. And maybe we're just witnessing the same thing distributed farther out to the edge. But also you think about as an application overlay, which in the end is what runs the business, is the value to the business. So the network, for instance, underlay becomes this underlay, right? But if we can actually manage and track the application overlay, and that determines exactly how the business is going to perform based on that value presented by it, so everything else really becomes commodity in the end. Grace Hopper had a, talked to the NSA in the early 80s, and she was talking about how things were going to be moving into systems of computers at the time. And she said that, you know, at the time they had a big mainframe and you had the processing power going on it, and the engineering was on it, and everybody else was on it, and payroll was on it. But as we got cheaper and cheaper computers, they started getting their own systems. And so they could actually break them apart. And the idea was, now that things are, you know, the price model is getting the point where we can break these apart and make them work better on their own, everybody was using their own computer, and they got to design them the way they needed them to. But then they realized all the connections that you have to go back and forth. So the underlying pieces of the networks talking to each other, and the ability of tying all these things together is what's going to be key in all of these. It always has been. And I think the consanerization gives us the ability to, you know, first we had virtual virtualization, and now the containerization we're going to able, we're going to be able to use bigger, bigger computers and have multiple applications running continuously that are all going to need that separation. And that allows us to be able to manage and optimize the application path as opposed to the network path. And so therefore in the end, everything's about the application, everything we do is going to be making sure that we have the application and the underlying infrastructure that can give us the latency and the performance that we need. It's all in support of the business need that we have at the end, and it's going to have to be a melting pot for everything to, you know, boil down and get to the point where it all helped. I do think that there, that puts a certain new level of stress or a burden and responsibility on the application designers, developers and managers. And so that is its own kind of learning cycle and learning curve. That was when I ran into today. We hit, we saw people that were able to orchestrate containers, but some of the questions that they're going to have in the long run are going to be whether or not the container is enough. I mean, the, the, if the actual application can't deal with the idea of part of it falling away. Yeah. These are somewhat esoteric application development skills. They are extremely valuable, not necessarily fully recognized until teams have gotten pretty far down a development path. And so, you know, that's where you can see, that's where you have that kind of experience I just described about using my phone and there's just not enough connectivity. And on the app I'm working with doesn't work that you could call that poor application development, but it's just an area that, you know, needs to continue to mature if it's being given this power. It needs to take that power seriously. Maybe I can ask you guys a question based on that. Do you see the focus of vendors shifting on setting, setting to the IT folks to setting to the application folks because in the end the application is king? I think that's the swing I was referring to earlier. I feel very much this, this weight in the last maybe two years more on the side of the application developers. And I credit and blame containerization for this. It was, you know, the supposed easy button so that the application developers can just define their environments and just go ahead and, you know, create their microservices based applications. And the infrastructure folks, the interface between the two is that the infrastructure folks are able to supply the service levels required for that and they don't have to have this continuous back and forth. So who should hold the purse strings? The application guys? Should the application guys be controlling the budget for the infrastructure? Or are we in a sort of service provided places? This way we're starting to come. You set me up. Of course, that's, you know, that's where the rubber hits the road, isn't it? Because the infrastructure guys should control their infrastructure budget. And I think one of the things we heard today, and I think it was from Avasa, was that they are in their own work, they're empowering as they build, you know, their business, they are empowering the infrastructure folks to speak to the needs of the application developers and managers. So the other, so I was at this point then that the infrastructure guys should be the service provider for the application guys who are then service providers for the business. Well, okay, so I should say that's the vision. That's, and I hear these discussions all the time from customers who are very into containerization and into furthering modernization through containerization that they seem to take this as an easy button. And it really isn't. So I'd like to drag us back from the precipice of weather develops and platform engineering are important things because I can see that the whole melding together, the melting together of these different technologies in here, we were heading for this idea that the technologies are coming together in this edge location and that a whole bunch of different technologies are being brought together and used in ways that they weren't previously used. That's where I'm coming from from this. Not only are they being used that way, they can't be used without each other. The interaction is the key to all of it. But I need as we're coming to the end of the show, I'd like each of you just bring some final thoughts on this idea that the age is a melting pot. And I'll start with Guy because he clearly has something to say. Well, I think Ivan has demonstrated to me pretty well that the scope of that melting pot is necessarily limited. In fact, when I'm thinking about these additional requirements, which I do believe exist in, you know, almost all edge cases essentially, many of those requirements lead more towards, let's say, purity than towards a melting pot approach. So I do think that it's the consultants answer, which is that it depends. But importantly to this discussion, it depends on the application. You need to understand the application, its requirements, what outcomes you're looking for, that classic chain of value in order to know whether the melting pot approach is the right approach or the right strategy from your vendors. And I don't think it's the melting pot at the edge. I think it's the melting pot that empowers the edge. Because in the end, yes, we want to deliver from the edge, but everything else, we have to make sure fits in with what we're looking for in business perspective. Is that your final word for me? That's my final comment. Excellent. In that case, John, surprisingly, you get to have the final word from the pen. Final word would be, I think it absolutely is true. It's a melting pot. We have applications that have to run on top of equipment that has to talk to each other. And if they aren't all working in harmony and in this melting pot together, they're not going to be able to take care of the end user that we really need. And whether that is completely at the edge or sitting at a data center, it's going to be a hodge podge of all of those pieces. So the edge has to melt together. And I think that the melting pot has always been here with our infrastructure and the applications that reside on top. I think one of the things that I even brought out really strongly is we've got to think about what we're doing for the business. Ultimately, our whole purpose as the infrastructure IT application developers team is to support the business to be more successful as a business. I think very importantly, that understanding of your contribution, how you can bring together your expertise and your knowledge and the technologies that are available to you to provide those solutions for businesses at the end. Thank you for joining us at the Tech Field Day podcast. Before we go, where can people continue this conversation? I know we're going to continue this conversation later on at a social event. But if people want to contact you, Guy, where can they find you to carry the conversation on? Well, gcurrierfutureum.com, but I can be found on Blue Sky as Guy Currier's feed and also on X at the same address. So was that Guy Currier's feed? Feed, feed, like my information feed. I apologize to the viewers. John, where can we find this that you two carry on? I'm a little rather old fashioned. I just John at ozman.net, email is probably the easiest way to get a hold of me. And for me, the best way is to go into LinkedIn and search for Ivan McPhee, mcphwe. Of course, you can always find me as Alistair Cook or A Cook or Demitas NZ. Just if you're searching for A Cook, Alistair Cook, there are a couple of other guys by that name, but put some technology and you'll find me. So thank you for listening to this episode of the Tech Field Day podcast. If you enjoyed the discussion, please subscribe to our YouTube channel or use your favorite podcast application so you don't miss a single episode. Also, do consider giving us a review and a like that helps a lot for other people to be able to find this awesome content. This podcast was brought to you by the Tech Field Day, home of IT experts from across the enterprise. Part of the Futurum Group. For upcoming events and more episodes, head to techfieldday.com slash podcast or view us on our wonderful Tech Strong TV platform. Thanks for listening and we'll see you next week.