 The following is a conversation with Steven Wolfram, a computer scientist, mathematician, a theoretical physicist who is the founder and CEO of Wolfram Research, a company behind Mathematica, Wolfram Alpha, Wolfram Language, and the new Wolfram Physics project. Is the author of several books including a new kind of science, which, on a personal note, was one of the most influential books in my journey in computer science and artificial intelligence. It made me fall in love with a mathematical beauty and power of cellular automata. It is true that perhaps one of the criticism of Steven is in a human level that he has a big ego, which prevents some researchers from fully enjoying the content of his ideas. We talk about this point in this conversation. To me, ego can lead your stray, but can also be a superpower, one that feels bold, innovative thinking that refuses to surrender to the cautious ways of academic institutions. And here, especially, I ask you to join me in looking past the peculiarities of human nature and opening your mind to the beauty of ideas and Steven's work and in this conversation. I believe Steven Wolfram is one of the most original minds of our time, and at the core is a kind, curious, and brilliant human being. This conversation was recorded in November 2019, when the Wolfram Physics project was underway, but not yet ready for public exploration as it is now. We now agreed to talk again, probably multiple times in the near future, so this is round one, and stay tuned for round two soon. This is the Artificial Intelligence podcast. Can you enjoy it? Subscribe on YouTube, review the five stars in Apple Podcast, support on Patreon, or simply connect with me on Twitter, and let's, Friedman spelled FRID, M-A-N. As usual, I'll do a few minutes of as now, and never any adds in the middle that can break the flow of the conversation. I hope that works for you, and doesn't hurt the listening experience. Quick summary of the ads, two sponsors, ExpressVPN and Cash App. Please consider supporting the podcast by getting ExpressVPN at expressVPN.com slash Lex pod and download and cash app and use and code Lex podcast. This show is presented by Cash App. The number one finance app in the app store, when you get it, use code Lex podcast. Cash App lets you send my new friends by Bitcoin and investing in stock market with as little as one dollar. Since Cash App does fractional share trading, let me mention that the order execution algorithm that works behind the scenes to create the abstraction of fractional orders is an algorithmic marvel. It's a big props to the Cash App engineers for solving a hard problem that in the end provides an easy interface that takes a step up to the next layer of abstraction over the stock market. This makes trading more accessible for new investors and diversification much easier. So again, if you get cash out from the app store, Google Play, and use the code Lex podcast, you get $10 and Cash App will also donate $10 the first, an organization that is helping to advance robotics and STEM education for young people around the world. This show is presented by ExpressVPN. Get it at expressVPN.com slash Lex pod to get a discount and to support this podcast. I've been using ExpressVPN for many years. I love it. It's really easy to use, press the big power on button and your privacy is protected. If you like, you can make it look like your locations and you wear else in the world. This has a large number of obvious benefits. Certainly it allows you to access international versions of streaming websites like the Japanese Netflix or the UK Hulu. ExpressVPN works on any device you can imagine. I use it on Linux, shout out to Ubuntu. You've already been coming out soon actually. Windows Android, but it's available anywhere else too. Once again, get it at expressVPN.com slash Lex pod to get a discount and to support this podcast. And now here's my conversation with Stephen Wolfram. You and your son Christopher helped create the Alien language and movie arrival. So let me ask maybe a bit of a crazy question, but if aliens were to visit us on earth, do you think we would be able to find a common language? Well, by the time we're saying aliens are visiting us, we're already prejudiced the whole story. Because the concept of an alien actually visiting, so to speak, we already know there kind of things that make sense to talk about visiting. So we already know they exist in the same kind of physical setup that we do. They're not, you know, it's not just radio signals, it's an actual thing that shows up and so on. So I think in terms of, you know, can one find ways to communicate? Well, the best example we have of this right now is AI. I mean, that's our first sort of example of alien intelligence. And the question is, how well do we communicate with AI? You know, if you were to say, if you were in the middle of a neural net and you open it up and it's like, what are you thinking? Can you discuss things with it? It's not easy, but it's not absolutely impossible. So I think I think by the time, but given the setup of your question, aliens visiting, I think the answer is, yes, when we'll be able to find some form of communication, whatever communication means communication requires notions of purpose and things like this, it's a kind of philosophical, quite mild. So if AI is a kind of alien life form, what do you think visiting looks like? So if we look at aliens visiting, and we'll get to discuss computation and the world of computation, but if you were to imagine, you said you're already prejudiced something by saying you visit. But what how would aliens visit? By visit, there's kind of an implication and here we're using the imprecision of human language. In a world of the future, if that's represented in computational language, we might be able to take the concept visit and go look in the documentation basically and find out exactly what does that mean, what properties does it have and so on. But by visit, in ordinary human language, I'm kind of taking it to be there's, you know, something, a physical embodiment that shows up in a spacecraft, since we kind of know that's necessary. We're not imagining it's just, you know, photons showing up in a radio signal that a photons in some very elaborate pattern, we're imagining it's physical things made of atoms and so on that show up. Can it be photons in a pattern? Well, that's good question. I mean, whether there is the possibility, you know, what counts as intelligence? Good question. I mean, there is some, you know, and I used to think there was sort of a, oh, there'll be, you know, it'll be clear what it means to find extraterrestrial intelligence, et cetera, et cetera. I've increasingly realized as a result of science that I've done, that there really isn't a bright line between the intelligent and the merely computational service peak. So, you know, in our kind of everyday sort of discussion will say things like, you know, the weather has a mind of its own. Well, we let's unpack that question. You know, we realize that there are computational processes that go on that determine the fluid dynamics of this and that and the atmosphere, etc. et cetera. How do we distinguish that from the processes that go on in our brains of, you know, the physical processes that go on in our brains? How do we, how do we, how do we separate those? How do we say the, the physical processes going on that represents sophisticated computations and the weather? Oh, that's not the same as the physical processes that go on that represents sophisticated computations in our brains. The answer is, I don't think there is a fundamental distinction. I think the distinction for us is that there's kind of a thread of history and so on that connects kind of what happens in different brains to each other, so to speak. And it's a, you know, what happens in the weather is something which is not connected by sort of a thread of civilization, history, so to speak, to what we're used to. In our story, in the stories that the human brain is told us, but maybe the weather has its own stories. Absolutely. Absolutely. And that's, and that's what we run into trouble thinking about, it's traditional intelligence because, you know, it's like that pulsar magnetosphere that's generating these very elaborate radio signals. Is that something that we should think of as being this whole civilization that's developed over the last half of a long, you know, millions of years of processes going on in the neutron star or whatever, versus what, you know, what we're used to in human intelligence. And I think it's, I think in the end, you know, when people talk about extraterrestrial intelligence and where is it and the whole, you know, Fermi paradox of how come there's no other sort of signs of intelligence in the universe. My guess is that we've got sort of two alien forms of intelligence that we're dealing with. Artificial intelligence and sort of physical or extraterrestrial intelligence. And my guess is people were sort of get comfortable with the fact that both of these have been achieved around the same time. And in other words, people will say, well, yes, we're used to computers, things we've created, digital things we've created, being sort of intelligent like we are. And they'll say, we're kind of also used to the idea that there are things around the universe that are kind of intelligent like we are, except they don't share the sort of civil relational history that we have. And so we don't, you know, they're, they're a different branch. I mean, it's similar to when you talk about life, for instance. I mean, you, you, you're kind of said life for my think almost synonymously with intelligence, which I don't think is, is some, you know, the, the AI's will be upset to hear you, uh, I quite those could say, really probably implied biological life. Right. Right. But you're saying, I mean, we'll explore this more, but you're saying, it's really a spectrum. And it's all just a kind of computation. And so it's, it's a full spectrum. And we just make ourselves special by weaving a narrative around our particular kinds of computation. Yes. I mean, the thing that I think I've kind of come to realize is, you know, at some levels, it's a little depressing to realize that there's, there's so little that's liberating. Well, yeah, but I mean, it's, you know, it's the story of science, right? And, you know, from Copernicus on, it's like, you know, first we were like convinced our planets at the center of the universe. Yeah. No, that's not true. Well, then we were convinced that something very special about the chemistry that we have as biological organisms. No, that's not really true. And then we're still holding out that hope, oh, the intelligence thing we have. That's really special. Yeah. I don't think it is. However, in a sense, as you say, it's kind of liberating for the following reason that you realize that what special is the details of us, not some abstract attribute that, you know, we could wonder, oh, is something else going to come along and, you know, also have that abstract attribute. Well, yes, every abstract attribute we have something else has it. But the full details of our kind of history of our civilization and so on, nothing else has that. That's what, you know, that's our story, so to speak. And that's sort of almost by definition special. So I view it as not being such a, I mean, I was initially, I was like, this is bad. This is, this is kind of, you know, how can we have self-respect about the things that we do? Then I realize the details of the things we do, they all the story, everything else is kind of a blank canvas. So maybe on a small tangent, you just made me think of it. But what do you make of the monoliths and 2001 space Odyssey in terms of aliens communicating with us and sparking the, the kind of particular intelligent computation that we humans have? Is there anything interesting to get from that sci-fi? Yeah, I mean, I think what's, what's fun about that is, you know, the monoliths are these, you know, one to four to nine perfect cuboid things. And in the, you know, Earth for a million years ago, whatever they were portraying with a bunch of apes and so on, a thing that has that level of perfection seems out of place. It seems very kind of constructed, very engineered. So that's an interesting question. What is the, you know, what's the techno signature, so to speak? What is it that you see it somewhere and you say, my gosh, that had to be engineered. Now the fact is, we see crystals, which are also very perfect. And, you know, the perfect ones are very perfect, they're nice polyhedro or whatever. And so, in that sense, if you say, well, it's a sign of sort of, it's a techno signature that it's a perfect, you know, a perfect polygonal shape, polyhedral shape. That's not true. And so then, it's an interesting question. What is the, you know, what is the right signature? I mean, like, you know, Gauss famous mathematician, you know, he had this idea, you should cut down the Siberian forest and the shape of sort of a typical image of the proof of the Pythagorean theorem on the grounds that, as a kind of cool idea didn't get done, but you know, on the grounds that the Martians would see that and realize, gosh, there are mathematicians out there. It's kind of, you know, it's the, in his theory of the world that was probably the best advertisement for the cultural achievements of our species. But, you know, it's, it's a, it's a, it's a reasonable question. What do you, what can you send or create that is a sign of intelligence in its creation, or even intention in its creation? Yeah, you talk about if we were to send a beacon. Can you, what, what should we send? Is math our greatest creation? Is, uh, what is our greatest creation? I think I think, and it's a, it's a, it's a philosophically doomed issue. To, I mean, in other words, you send something, you think it's fantastic, but it's kind of like we are part of the universe. We make things that are, you know, things that happen in the universe, computation, which is sort of the thing that we are in some abstract sense, and then sense using to create all these elaborate things we create is surprisingly ubiquitous. In other words, we might have thought that, you know, we've built this whole giant engineering stack that's led us to microprocessors that's led us to be able to do elaborate computations. But this idea that computations are happening all over the place, the only question is whether there's a thread that connects our human intentions to what those computations are. And so I think, I think this question of what do you send to kind of show off our civilization in the best possible way? I think any kind of almost random slab of stuff we've produced is about equivalence everything else. I think it's one of these things where it's a non-romantic way of phrasing it. I just started to interrupt, but I just talked to Andrew in, who's the wife of Carl Sagan. And so I don't know if you're familiar with the Voyager, I mean, she was part of sending, I think, brain waves of, you know, what's the purpose? It was part of the same part. Carl Sagan, her brain waves, when she was first falling in love with Carl Sagan, right? It's a beautiful story. Right, that perhaps you would shed down the power of that by saying we might as well send anything else. And that's interesting. All of it is kind of an interesting peculiar thing. Yeah, right. I mean, I think it's kind of interesting to see on the Voyager, you know, Golden Record thing. One of the things that's kind of cute about that is, you know, it was made one was it in the late 70s or late 80s. Yeah. And, you know, one of the things it's a phonograph record. And it has a diagram, how to play a phonograph record. Yeah. And, you know, it's kind of like it's shocking that in just 30 years, if you show that to a random kid of today and you show them that diagram, I've tried this experiment. They're like, I don't know what the heck this is. And the best anybody can think of is, you know, take the whole record, forget the fact that it has some kind of helical track in it, just image to the whole thing and see what's there. That's what we would do today. In only 30 years, our technology has kind of advanced to the point where the playing of a helical, you know, mechanical track on a phonograph record is now something bizarre. So, you know, it's, it's a, that's a cautionary tale I would say in terms of the ability to make something that in detail sort of leads by the nose, some, you know, of the aliens or whatever, to do something. It's like, no, you know, best you're going to do, as I say, if we were doing this today, we would not build a helical scan thing with a needle. We would just take some high resolution imaging system and get a little bit soft it and say, oh, it's a big nuisance that they put in a helix, you know, let's spiral, let's some, let's just, you know, unravel the spiral and start from there. Do you think, and this will get into trying to figure out interpretability of AI, interpretability of computation being able to communicate with various kinds of computations? Do you think would be able to, if you're put, put your alien head on, figure out this record, how to play this record? Well, it's a question of what one wants to do. I mean, understand what the other party was trying to communicate or understand anything about the other party. What is understanding mean? I mean, that's the issue. The issue is it's like when people were trying to do natural language understanding for computers, right? So people tried to do that for years. It wasn't clear what it meant. In other words, you take your piece of English or whatever and you say, gosh, my computer is understood this. Okay, that's nice. What can you do with that? Well, so for example, when we did, you know, Bill Wolf Malfa, you know, one of the things was, it's, you know, it's doing question answering and so on and it needs to do natural language understanding. The reason that I realized after the fact, the reason we were able to do natural language understanding quite well and people hadn't before, the number one thing was we had an actual objective for the natural language understanding. We were trying to turn the natural language into computation into this computational language that we could then do things with. Now, similarly, when you imagine your alien, you say, okay, we're playing them the record. Did they understand it? Well, depends what you mean. If they, you know, if there's a representation that they have, if it converts to some representation, where we can say, oh, yes, that is a, that's a representation that we can recognize is represents understanding than all well and good. But actually, the only ones that I think we can say would represent understanding a ones that will then do things that we humans kind of recognize as being useful to us. Maybe a trend and understand quantify how technological advances particular civilization is. So are they a threat to us from a military perspective? Yeah, that's probably the kind of first kind of understanding they'll be interested in. Gosh, that's so hard. I mean, that's like in the arrival movie, that was sort of one of the key questions is, you know, why you hear so to speak? Yeah. And it's, I even heard it. Right. But even that is, you know, it's a very unclear. You know, it's like the, the, are you going to hurt us? That comes back to a lot of interesting AI ethics questions because the, you know, we might make an AI that says, but take autonomous cars, for instance, you know, are you going to hurt us? Well, let's make sure you only drive at precise to the speed limit because we want to make sure we don't hurt you so to speak, because and then well, something, you know, but you say, but actually that means I'm going to be really late for this thing and, you know, that sort of hurts me in some way. So it's hard to know, even even the definition of what it means to hurt, yeah, someone is unclear. And as we start thinking about things about AI ethics and so on, that's, you know, something one has to address. There's always trade-offs and that's the annoying thing about ethics. Yeah, well, right. And I mean, I think ethics like these other things we're talking about is a deeply human thing. There's no abstract, you know, let's write down the theorem that proves that this is ethically correct. That's a, that's a meaningless idea. You know, you have to have a ground truth, so to speak, that's ultimately sort of what humans want and they don't want the same thing. So that gives one all kinds of additional complexity and thinking about that. One convenient thing in terms of turning ethics into computation, it has the question of what maximizes the likelihood of the survival of the species. Yeah, that's a good existential issue. But then when you say survival of the species, right, you might say, you might, for example, for example, let's say, forget about technology, just, you know, hang out and, you know, be happy, live our lives, go into the next generation, you know, go through many, many generations where in a sense nothing is happening. That okay, is that not okay? Hard to know. In terms of, you know, the attempt to do elaborate things and the attempt to might be counterproductive for the survival of the species. Like, for instance, I mean, in, you know, I think it's, it's also a little bit hard to know, so okay, but take that as a, as a sort of thought experiment, okay? You know, you can say, well, what are the threats that we might have to survive? You know, the super volcano, the asteroid impact, the, you know, all these kinds of things. Okay, so now we inventory these possible threats and we say, let's make our species as robust as possible, rather, of all these threats. I think in the end, it's a, it's sort of an unknowable thing, what it takes to, you know, so, so given that you've got this AI and you've told it, maximise the long term, what does long term mean? Does long term mean until the sun burns out? That's, that's not going to work. You know, does long term mean next thousand years? Okay, there are probably optimizations for the next thousand years that it's like, like if you're running a company, you can make a company be very stable for a certain period of time. Like if, you know, if your company gets bought by some, you know, private investment group, then they'll, you know, you can, you can run a company just fine for five years by just taking what it does and, you know, removing all the R&D and the company will burn out after a while, but it'll run just fine for the world. So if you tell the AI, keep humans okay for a thousand years. There's probably a certain set of things that one would do to optimize that many of which one might say, well, that would be a pretty big shame for the future of history. So to speak for that to be what happens. But I think, I think in the end, you know, as you start thinking about that question, it is, um, what you realize is there's a whole sort of raft of underciderability, computational irreducibility. In other words, it's, I mean, one of the good things about sort of the, the, the, the, what our civilization has gone through a what sort of we humans go through is that there's a certain computational irreducibility to it. And the sense that it isn't the case that you look from the outside and just say, the answer is going to be this at the end of the day, this is what's going to happen. You actually have to go through the process to find out. And I think that's, that's both that feels better in the sense that's not a, you know, something is achieved by going through all of this, uh, uh, all of this process. And, um, it's, uh, but it also means that telling the AI, go figure out, you know, what will be the best outcome? Well, unfortunately it's going to come back and say it's kind of understandable what to do. We'd have to run all of those scenarios, um, to see what happens. And if we want it for the infinite future, we're thrown immediately into sort of standard issues of kind of infinite computation and so on. So yeah, even if you get the answer to the universe and everything is 42, you still have to actually run the universe. Yes, to, to, to, to figure out. Yes, like the question I guess or the, the, you know, the journey is, is the point. Right. Well, I think it's saying to summarize, this is the result of the universe. Yeah. That's, if that is possible, it tells us, I mean, the whole sort of structure of thinking about computation and so on and thinking about how stuff works. If, if they're, if it's possible to say and the answer is such and such, you're basically saying there's a way of going outside the universe and you're kind of, you're getting yourself into something of a sort of paradox because you're saying, if it's noable what the answer is, then there's a way to know it that is beyond what the universe provides, but if we can know it, then something that we're dealing with is beyond the universe. So then the universe isn't the universe, so to speak. So and in general, as, as we'll talk about, at least for our small human brains, it's hard to show that the result of a sufficiently complex computation. It's hard, I mean, it's probably impossible, right, and this is a side ability. So and the universe appears by at least the poets to be sufficiently complex that we won't be able to predict what the heck it's all going to. But we better not be able to because if we can, it kind of denies, I mean, it's, you know, we're part of the universe. Yeah, so what does it mean for us to predict? It means that we, that our little part of the universe is able to jump ahead of the whole universe. And, you know, this, this quickly winds up, I mean, that there, it is conceivable. The only way we would be able to predict is if we are so special in the universe, we are the one place where there is computation, more special, more sophisticated than anything else that exists in the universe. That's the only way we would have the ability to sort of the, almost theological ability, so to speak, to predict what happens in the universe is to say somehow we're, we're better than everything else in the universe, which I don't think is the case. Yeah, perhaps we can detect a large number of looping patterns that reoccur throughout the universe and fully describe them and therefore, but then it still becomes exceptionally difficult to see how those patterns interact and what kind of good things it looks. The most remarkable thing about the universe is that it has regularity at all. Might not be the case. If you just have regularity, absolutely, there fits full of, I mean, physics is successful, you know, it's full of, of laws that tell us a lot of detail about how the universe works. I mean, it could be the case that, you know, the tent of the 90th particles in the universe, they will do their own thing, but they don't, they will follow, we already know, they will follow basically physical, the same physical laws and that's something that's a very profound fact about the universe. What conclusively draw from that is unclear, I mean, in the, you know, the early, early theologians, that was, you know, exhibit number one for the existence of God. Now, you know, people have different conclusions about it, but the fact is, you know, right now, I mean, I happen to be interested actually, I've just restarted a long running, kind of interested mind about fundamental physics. I'm kind of like, go on, I'm on a bit of a quest which I'm about to make more public to see if I can actually find the fundamental theory of physics. Excellent. We'll come to that and I just had a lot of conversations with quantum mechanics folks with, so I'm really excited on your take, because I think you have a fascinating take on the, the, the, the, the the fundamental to nature of our reality for a physics perspective. So, and what might be underlying the kind of physics, as we think of it today. Okay, let's take us to back. What is computation? It's a good question. Operationaly computation is following rules. That's kind of it. I mean, computation is the result is the process of systematically following rules, and it is the thing that happens when you do that. So taking initial conditions or taking inputs and following rules, I mean, what are you following rules on? So there has to be some data some, not necessarily it can be something where there's a, you know, very simple input, and then you're following these rules, and you'd say there's not really much data going into this. It's, you can actually pack the initial conditions into the rule if you want to. So I think the, the question is, is there a robust notion of computation? That is, what is robust mean? What I mean by that is something like this. So, so one of the things in a different in another physics, something like energy, okay? They're different forms of energy, there's, but somehow energy is a robust concept that doesn't, isn't particular to kinetic energy or, you know, nuclear energy or whatever else. There's a robust idea of energy. So one of the things you might ask is, is there's a robust idea of computation? Or does it matter that this computation is running an a term machine? This computation is running in a, you know, CMOS, silicon, CBU. This computation is running in a fluid system in the weather. Those kinds of things. Or is there a robust idea of computation that transcends the sort of detailed framework that it's running in, okay? And is there? Yes. I mean, it wasn't obvious that there was, so it's worth understanding the history and how we got to where we are right now. Because, you know, to say that there is, is a statement in part about our universe. It's not a statement about what is mathematically conceivable. It's about what actually can exist for us. Maybe you can also comment because energy as a concept is robust, but there's also its complicated relationship with matter with mass is very interesting of particles that carry force and particles that sort of particles that carry force and particles that have mass. These kinds of ideas, they seem to map to each other at least in the mathematical sense. Is there a connection between energy and mass and computation or at least completely disjoint ideas? We don't know yet. The things that I'm trying to do about fundamental physics may well lead to such a connection, but there is no known connection at this time. So, can you elaborate a little bit more on what, how do you think about computation? What is computation? Yeah. So, I mean, let's, let's tell a little bit of a historical story. Yeah. Okay. So, you know, back, go back 150 years, people were making mechanical calculators of various kinds. And, you know, the typical thing was you want an adding machine, you go to the adding machine store, basically. You want to multiply a machine, you go to the multiplying machine store. That different pieces of hardware. And so that means that at least at the level of that kind of computation and those kinds of pieces of hardware, there isn't a robust notion of computation. There's the adding machine kind of computation, there's the multiplying machine notion of computation and they're disjoint. So, what happened in around 1900, people started imagining, particularly in the context of mathematical logic, could you have something which would be represent any reasonable function? Right? And they came up with things, the idea of prundity of recursion was one of the early ideas. And it didn't work. There were reasonable functions that people could come up with that were not represented using the prundity of recursion. So, then, then, along comes 1931 and girdles theorem and so on. And as in looking back, one can see that as part of the process of establishing girdles theorem, girdle basically showed how you could compile arithmetic. How you could basically compile logical statements like this statement is unprovable into arithmetic. So, what he essentially did was to show that arithmetic can be a computer in a sense that's capable of representing all kinds of other things. And then, touring came along, 1936 came up with touring machines. Meanwhile, the ones of church who come up with lander calculus. And the surprising thing that was established very quickly is the touring machine idea about what might be, what computation might be is exactly the same as the lander calculus idea of what computation might be. And so, and then they started to be other ideas, you know, register machines, other kinds of representations of computation. And the big surprise was, they all turned out to be equivalent. So, in other words, it might have been the case like those old adding machines of multiplying machines that, you know, touring had his idea of computation church, had his idea of computation and they were just different, but it isn't true. They're actually all equivalent. So, then, by, I would say, the, the, oh, 1970s or so, and sort of the computation computer science computation theory area, people that sort of said, oh, touring machines are kind of what computation is. Physicists were still holding out, saying, no, no, it's just not how the universe works. We've got all these differential equations. We've got all these real numbers that have been fit numbers of digits. The universe is now a touring machine. Right. The, you know, the touring machines are a small subset of, of, that are the things that we make in micro processors and engineering structures and so on. So, probably, actually through my work in the 1980s about sort of the relationship between computation and models of physics, it became a little less clear that there would be, that there was this big sort of dichotomy between what can happen in physics and what happens and things like touring machines. And I think probably by now people would mostly think, and by the way, brains were another kind of elements of this. I mean, you know, good old, didn't think that his notion of computational, what amounted to his notion of computation, would cover brains. And, um, touring wasn't sure either. But, oh, though, he was a little bit, he got to be a little bit more convinced that it should cover brains. But, so, you know, but I would say by probably sometime in the 1980s there was beginning to be sort of a general belief that, yes, this notion of computation that could be captured by things like touring machines was reasonably robust. Now, the next question is, okay, you can have a universal touring machine that's capable of being programmed to do anything that any touring machine can do. And, you know, this idea of universal computation is an important idea. This idea that you can have one piece of hardware and program that with different pieces of software, you know, that's kind of the idea that launched most modern technology. I mean, that's kind of, that's the idea that launched computer evolution software, etc. So, important idea. But, but the thing that's still kind of holding out from that idea is, okay, there is this universal computation thing, but seems hard to get to. Seems like you want to make a universal computer, you have to kind of have a microprocessor with, you know, a million gates in it and you have to go to a lot of trouble to make something that achieves that level of computational sophistication. Okay, so the surprise for me was that stuff that I discovered in the early eighties, um, looking at these things called cellular automata, which are really simple computational systems, um, the thing that was a big surprise to me was that even when their rules were very, very simple, they were doing things that were as sophisticated as they did, even when they were all as much more complicated. So, it didn't look like, you know, this idea, oh, to get sophisticated computation, you have to build something with very sophisticated rules, that idea didn't seem to pan out. And instead, it seemed to be the case that's sophisticated computation was completely ubiquitous, even in systems with incredibly simple rules. And so that led to this thing that I call the principle of computational equivalence, which basically says, when you have a system that follows rules of, of any kind, then whenever the system isn't doing things that are in some sense, obviously simple, then the computation that the behavior of the system corresponds to is of equivalence sophistication. So that means that when you kind of go from the very, very, very, very simplest things you can imagine, then quite quickly you hit this kind of threshold above which everything is equivalent in its computational sophistication. Not obvious that would be the case. I mean, that's a science fact. Well, and then a whole line of second, you, so this, you've opened with a new kind of science. I mean, I remember it was a huge eye opener that's such simple things can create such complexity and yes, there's an equivalence, but it's not a fact. It just appears to, I mean, as much as a fact as sort of these theories are so elegant that it seems to be the way things are. But let me ask sort of, you just brought up previously kind of like the communities of computer scientists with their toy machines, the physicists with their universe, and the whoever the heck, maybe neuroscientists looking at the brain, what's your sense in the equivalence? You've shown through your work that simple rules can create equivalently complex toy machine systems, right? Is the universe equivalent to the kinds of the two toy machines? Is the human brain a kind of toy machine? Do you see those things basically blending together? Or is there still a mystery about how did you join there? Well, my guess is that they all blend together, but we don't know that for sure yet. I mean, I should say, I said rather globally that the principal's computational equivalence is sort of a science fact, and I was using in quotes for the science fact, because when you, it is a, I mean, just to talk about that for a second, then we'll, the thing is that it has a complicated, a personal logical character. Similar to things like the second-lor of thermodynamics, the lower ventral band increase. The, you know, what is the second-lor of thermodynamics? Is it a lower nature? Is it a thing that is true of the physical work? Is it something which is mathematically provable? Is it something which happens to be true of the systems that we see in the world? Is it, in some sense, a definition of heat perhaps? Well, it's a combination of those things, and it's the same thing with the principal computational equivalence. And in some sense, the principal of computational equivalence is at the heart of the definition of computation, because it's telling you there is a thing, there is a robust notion that is a equivalent across all these systems and doesn't depend on the details of each individual system, and that's why we can meaningfully talk about a thing called computation, and we're not stuck talking about, oh there's computation in term machine number three seven eight five, and et cetera, et cetera, et cetera. That's why there is a robust notion like that. Now, on the other hand, can we prove the principal of computational equivalence? Can we prove it as a mathematical result? Well, the answer is actually we've got some nice results along those lines that say, you know, throw me around them system with very simple rules. Well, in a couple of cases, we now know that even the very simplest rules we can imagine of a certain type are universal and do sort of follow what you would expect from the principal of computational equivalence. So that's a nice piece of sort of mathematical evidence for the principal of computational equivalence. Did you still remember at that point, the simple rules creating sort of these complex behaviors, but is there a way to mathematically say that this behavior is complex, that you've mentioned that you cross a threshold, right? So there's a very indicator. So for example, one thing would be is it capable of universal computation? That is, given the system, do there exist initial conditions for the system that can be set up to essentially represent programs to do anything you want, to compute primes to compute pie, to do whatever you want. Right? So that's an indicator. So we know in a couple of examples that, yes, the simplest candidates that could conceivably have that property, do have that property. And that's what the principal of computational equivalence might suggest. But this principal of computational equivalence one question about it is, is it true for the physical world? It might be true for all these things we come up with that touring machines, the cellular automator, whatever else, is it true for a actual physical world? Is it true for the brain's which are an element of the physical world? We don't know for sure, and that's not the type of question that we will have a definitive answer because it's, you know, there's a sort of scientific induction issue you can say, what's true for all these brains? But this person over here is really special and it's not true for them. And you can't, you know, the only way that that cannot be what happens is if we finally nail it and actually get a fundamental theory for physics and it turns out to correspond to let's say a simple program. If that is the case, then we will basically have reduced physics to a bunch of mathematics in the sense that we will not be, you know, right now with physics we're like, well, this is the theory that, you know, this is the rules that apply here, but in the middle of that, you know, right by that black hole, maybe these rules don't apply and something else applies and there may be another piece of the onion that we have to peel back. But if we can get to the point where we actually have, this is the fundamental theory of physics. Here it is, it's this program run this program and you will get our universe. Then we've kind of reduced the problem of figuring out things and physics to a problem of doing some what turns out to be very difficult, it reduced simply difficult mathematical problems. But it no longer is the case that we can say that somebody can come and and say, whoops, you know, you will write about all these things about turning machines, but you're wrong about the physical universe. We know that sort of ground truth about what's happening in the physical universe. Now, I happen to think, I mean, you asked me at an interesting time because I'm just in the middle of starting to to re-energize my project to kind of study fundamental theory of physics. As of today, I'm very optimistic that we're actually going to find something and that it's going to be possible to see that the universe really is computational in that sense. But I don't know because we're betting against, you know, we're betting against the universe, so to speak, and I didn't, you know, it's not like, you know, when I spend a lot of my life building technology and then I know what's in there, right? And it's there may be, you may have unexpected behavior at my above things like that, but fundamentally, I know what's in there for the universe, I'm not in that position, so to speak. What kind of computation do you think the fundamental laws of physics might emerge from? So just to clarify, so there's, you've done a lot of fascinating work with kind of discrete kinds of computation that, you know, you can sell your automata and we'll talk about it. Have this very clean structure, it's such a nice way to demonstrate that simple rules can create immense complexity. But what, is that actually, are cellular automata sufficiently general to describe the kinds of computation that might create the laws of physics? Just to give a sense of what kind of computation do you think would create? Well, so physics. So this is a slightly complicated issue because as soon as you have universal computation, you can, in principle, simulate anything with anything, but it is not a natural thing to do, and if you're asking, were you to try to find our physical universe by looking at possible programs and the computational universal, well, possible programs, would the ones that correspond to our universe be small and simple enough that we might find them by searching that computational universe? We got to have the right basis, so to speak. We have what to have the right language, in effect, for describing computation, for that to be feasible. So the thing that I've been interested in for a long time is, what are the most structuralist structures that we can create with computation? So in other words, if you say a cellular automaton has a bunch of cells that are arrayed on a grid and it's very, you know, and every cell is updated in synchrony at a particular, you know, when there's a click of a clock, so to speak, and it goes a tick of a clock, and every cell gets updated at the same time. That's a very specific, very rigid kind of thing. But my guess is that when we look at physics, and we look at things like space and time, that what's underneath space and time is something as structuralist as possible, that what we see, what emerges for us as physical space, for example, comes from something that is sort of arbitrarily unstructured underneath. And so I've been for a long time interested in kind of what are the most structuralist structures that we can set up? And actually what I had thought about for ages is using graphs, networks, where essentially, so there's a thought about space, for example. So what is space? Is a kind of a question where I might ask, back in the early days of quantum mechanics, for example, people said, oh, for sure, space is going to be discrete, because all these other things we're finding are discrete, but that never worked out in physics. And so space in physics today is always treated as this continuous thing, just like you could imagine it. I mean, the very first thing you could say is in his sort of common notions is, you know, a point is something which has no part. In other words, there are, there are points that are arbitrarily small, and there's a continuum of possible positions of points. And the question is, is that true? And so for example, if we look at, I don't know, fluid, like air or water, we might say, it's a continuous fluid. We can pour it. We can do all kinds of things continuously. But actually, we know, because we know the physics of it, that it consists of a bunch of discrete molecules bouncing around and only in the aggregate, is it behaving like a continuum. And so the possibility exists that that's true of space, too. People haven't managed to make that work with existing frameworks and physics. But I've been interested in whether one can imagine that underneath space and also underneath time is something more structuralist. And the question is, is it computational? So there are a couple possibilities. It could be computational, somehow fundamentally equivalent to a term machine. Or it could be fundamentally not. So how could it not be? It could not be. So a term machine essentially deals with integers, whole numbers, some level. And it can do things like it can add one to a number. It can do things like this. It can also store whatever the heck it did. Yes, it has an infinite storage. But what term, one one thinks about doing physics or sort of idealized physics or idealized mathematics, one can deal with real numbers, numbers with an infinite number of digits. Yeah. The numbers which are absolutely precise, and we can say, we can take this number and we can multiply it by itself. Are you comfortable with infinity? Is it context? Are you comfortable in the context of computation? Do you think infinity plays a part? I think that the role infinity is complicated. And infinity is useful in conceptualizing things. It's not actualizable. Almost by definition, it's not actualizable. But do you think infinity is part of the thing that might underlie the laws of physics? I think that, no, I think there are many questions that you ask about. You might ask about physics, which inevitably involve infinity. Like when you say, is faster than a light travel possible? You could say, given the laws of physics, can you make something even arbitrarily large, even quotes infinitely large, that will make faster than light travel possible? Then you're throwing into dealing with infinity as a kind of theoretical question. But I mean, talking about sort of what's underneath space and time and what how one can make a computational infrastructure? One possibility is that you can't make a computational infrastructure, and during such machine sense, that you really have to be dealing with precise real numbers, you're dealing with partial differential equations, which just have precise real numbers that arbitrarily close to separated points. You have a continuum for everything. Could be that that's what happens. That there's sort of a continuum for everything in precise real numbers for everything, and then the things I'm thinking about are wrong. That's the risk you take if you're trying to sort of do things about nature is you might just be wrong. It's not, it's for me personally, it's kind of a strange things that've spent a lot of my life building technology, where you can do something that nobody cares about, but you can't be sort of wrong in that sense. In the sense you build your technology and it does what it does. But I think this question of what, what the sort of underlying computational infrastructure for the universe might be, it's sort of inevitable, it's going to be fairly abstract, because if you're going to get all these things like there are three dimensions of space, there are electrons, there are muons, there are quarks, there are this. You don't get to, if the model for the universe is simple, you don't get to have sort of a line of code for each of those things. You don't get to have sort of the muon case, the tau-lepton case, all of those are all have to be emergent, some sort of something deeper. So that means it's sort of inevitable that's a little hard to talk about what the sort of underlying structural structure actually is. Do you think human beings have the cognitive capacity to understand, if we're to discover to understand the kinds of simple structure from which these laws can emerge? Like, you think that's a good question. Well, here's what I think. I think that, I mean, I'm right in the middle of this right now. So I'm telling you that I think you're seeing this human, I mean, this human has a hard time understanding a bunch of the things that are going on. But but what happens in understanding is one builds waypoints. I mean, if you said, understand modern 21st century mathematics, starting from counting back and you know, whenever counting was invented 50,000 years ago, whatever it was, right? That will be really difficult. But what happens is we build waypoints that allow us to get to higher levels of understanding. And we see the same thing happening in language, you know, when we invent a word for something, it provides kind of a cognitive anchor, a kind of a waypoint that lets us, you know, like a podcast or something. You could be explaining, well, it's a thing which this works this way that way. They are the way, but as soon as you have the word podcast and people kind of society understand it, you start to build a build on top of that. And so I think, and that's kind of the story of science actually too. I mean, science is about building these kind of waypoints where we find this sort of cognitive mechanism for understanding something. Let me can build on top of it, you know, we have the idea of, I don't know, differential equations. We can build on top of that. We have the side area of that idea. So my hope is that if it is the case that we have to go all the way sort of from the sand to the computer and there's no waypoints in between, then we're toast. We won't be able to do that. Well, eventually we might. So if we're, as Clevver Yaps are good enough a billionaires abstract abstractions, eventually from sand will get to the computer A. And it's just might be a longer journey. The question is whether it is something that you ask whether our human is going on. Yes. Well, and we'll quote, understand what's going on. And that's a different question because for that it requires steps that are for whether it's sort of from which we can construct a human understandable narrative. And that's something that I think I am somewhat hopeful that that will be possible, although, you know, as of literally today, if you ask me, I'm confronted with things that I don't understand very well. And so this is a small pattern in a computation trying to understand the rules under which the computation functions. And it's the interesting possibility under which kinds of computations such a creature can understand itself. My guess is that within, so we didn't talk much about computational irreducibility, but it's a consequence of this principle of computational equivalence. And it's sort of a core idea that one has to understand, I think, which is question is, you're doing a computation, you can figure out what happens in the computation just by running every step in the computation and seeing what happens. Or you can say, let me jump ahead and figure out, you know, have something smarter that figures out what's going to happen before it actually happens. And a lot of traditional science has been about that act of computational reducibility. Yes. It's like we've got these equations, and we can just solve them. And we can figure out what's going to happen. We don't have to trace all of those steps. We just jump ahead because we solve these equations. Okay, so one of the things that is a consequence of the principle of computational equivalence is you don't always get to do that. Many, many systems will be computationally irreducible. In the sense that the only way to find out what they do is just follow each step and see what happens. Why is that? Well, if you have, if you're saying, well, we, with our brains, we're a lot smarter, we don't have to mess around like the little cellular automaton going through and updating all those cells. We can just, you know, use the power of our brains to jump ahead. But if the principle of computational equivalence is right, that's not going to be correct because it means that there's us doing our computation in our brains. There's a little cellular automaton doing its computation. And the principle of computational equivalence says, these two computations are fundamentally equivalent. So that means we don't get to say, we're a lot smarter than the cellular automaton and jump ahead because we're just doing computation that's of the same sophistication as the cellular automaton itself. That's computational irreducibility is fascinating. And that's a really powerful idea. I think that's both depressing and humbling and so on that while we and cellular automaton are the same. But the question we're talking about the fundamental laws of physics is kind of the reverse question. You're not predicting what's going to happen. You have to run the universe for that. But saying, can I understand what rules likely generated me? I understand. But the problem is to know whether you're right, you have to have some computational reducibility because we are embedded in the universe. If the only way to know whether we get the universe is just to run the universe, we don't get to do that because it just ran for 14.6 billion years or whatever. And we don't, you know, we can't rerun it so to speak. So we have to hope that there are pockets of computational reducibility sufficient to be able to say, yes, I can recognize those are electrons there. And I think that it is a feature of computational irreducibility. It's a mathematical feature that there are always an infinite collection of pockets of reducibility. The question of whether they land in the right place, and whether we can sort of build a theory based on them is unclear. But to this point about whether we as observers in the universe built out of the same stuff as the universe can figure out the universe, so to speak. That relies on these pockets of reducibility. Without the pockets of reducibility, it's won't work, can't work. But I think this question about how observers operate. It's one of the features of science over the last 100 years, particularly, has been that every time we get more realistic about observers, we learn a bit more about science. So for example, relativity was all about observers don't get to say, when, you know, what's simultaneous with what they have to just wait for the light signal to arrive to decide what's simultaneous. Or for example, in thermodynamics, observers don't get to say the position of every single molecule and a gas. They can only see the kind of large scale features. And that's why the second level of thermodynamics, Loreventry being increased and so on works. If you could see every individual molecule, you wouldn't conclude something about thermodynamics. You would conclude, oh, these molecules just all doing these particular things. You wouldn't be able to see this aggregate fact. So I strongly expect that, and in fact, the theories that I have, the one has to be more realistic about the computation and other aspects of observers in order to actually make a correspondence between what we experience in fact. They have a, my little team and I have a little theory right now about how quantum mechanics may work, which is a very wonderfully bizarre idea about how sort of threat of human consciousness relates to what we observe in the universe. But this is the several steps to explain what that's about. What do you make of the mess of the observer at the lower level of quantum mechanics? Sort of the textbook definition with quantum mechanics kind of says that there's some, there's two worlds. One is the world that actually is and the other is that's observed. Yeah, what do you make sense of that? Well, I think actually the ideas we've recently had might actually give away into this. And that's, I don't know yet. I mean, I think that's a mess. I mean, the fact is there is a one of the things that's interesting and when people look at these models that I started talking about 30 years ago now, they say, oh, no, that compost would be right, what about quantum mechanics? You say, okay, tell me, what is the essence of quantum mechanics? What do you want me to be able to reproduce to know that I've got quantum mechanics, sort of speak? Well, and that question comes up. It comes up very operational, actually, because we've been doing a bunch of stuff with quantum computing and there are all these companies that say, we have a quantum computer and we say, let's connect to your API and let's actually run it and they're like, well, maybe you shouldn't do that yet. We're not quite ready yet. And one of the questions that I've been curious about is, if I have five minutes with a quantum computer, how can I tell if it's really a quantum computer or whether it's a simulator at the other end? And turns out it's really hard. It turns out there isn't, it's like a lot of these questions about sort of what is intelligence what's life. It's a very task for quantum computer. That's right. That's right. It's like, are you really a quantum computer? And I think the simulation, yes, exactly. Is it just a simulation or is it really a quantum computer? It's the same as you all over again. But that term, so, you know, this whole issue about the sort of mathematical structure of quantum mechanics and the completely separate thing that is our experience in which we think definite things happen, but as quantum accounts, it doesn't say definite things ever happen. Quantum mechanics is all about the amplitudes for different things to happen. But yet our threat of consciousness operates as if definite things are happening. To linger on the point, you've kind of mentioned the structure that could underlie everything and this idea that it could perhaps have something like the structure of a graph. You elaborate why your intuition is that there's a graph structure of nodes and edges and what it might represent. Right. Okay. So the question is, what is, in a sense, the most structural structure you can imagine. So, and in fact, what I've recently realized in last year or so, I have a new most structuralist structure. By the way, the question itself is a beautiful and a powerful one in itself. So even without an answer, just the question is a really strong question. Right. But what's your new idea? Well, it has to do with hypergraphs. Essentially, what is interesting about the sort of model I have now is a little bit like what happened with computation. Everything that I think of as, oh well, maybe the model is this. I discover it's equivalent. And that's quite encouraging because it's like, I could say, well, I'm going to look at a trivalent graph with three edges for each node and so on. I could look at this special kind of graph. I could look at this kind of algebraic structure and turns out that the things I'm now looking at, everything that I've imagined that is a plausible type of structuralist structure is equivalent to this. So what is it? Well, a typical way to think about it is, well, so you might have some collection of tuples, collection of, let's say numbers. So you might have one, three, five, two, three, four. Just collections of numbers, triples of numbers, let's say, quadruples of numbers, pairs of numbers, whatever. And you have all these sort of floating little tuples, they're not in any particular order. And that sort of floating collection of tuples, and I told you this was abstract, represents the whole universe. The only thing that relates them is, when a symbol is the same, it's the same, so to speak. So if you have two tuples and they contain the same symbol, let's say at the same position of the tuple, the first element of the tuple, then that represents a relation. Okay, so let me, let me try and peel this back. Wow, okay, so I told you this abstract, but this is, this is, so the relationship is formed by the same, some aspect of the sameness. Right, but so think about it in terms of a graph. Yeah, so a graph, bunch of nodes, let's say you number each node. Okay, then what is a graph? A graph is a set of pairs that say this node has an edge connecting it to this other node. So that's the, that's an graph is just a collection of those pairs that say this node connects to this other node. So this is a generalization of that in which instead of having pairs, you have arbitrary end tuples. That's it, that's the whole story. And now the question is, okay, so that might represent the state of the universe, how does the universe evolve? What does the universe do? And so the answer is that what I'm looking at is transformation rules on these hypergraphs. In other words, you say this, whenever you see a piece of this hypergraph that looks like this, turn it into a piece of hypergraph that looks like this. So on a graph, it might be, when you see the subgraph, when you see this thing with a bunch of edges hanging out in this particular way, then rewrite it as the subgraph. Okay. And so that's the whole story. So the question is, what, so now you say, I mean, think that, as I say, this is quite abstract. And one of the questions is, where do you do those updating? So you've got this giant graph? What triggers the updating? Like, what's the, what's the ripple effect of it? Is it, yeah, and I suspect everything's discrete even in time? So okay. So the question is, what do you do the updates? Yes. And the answer is, the rule is you do them wherever they apply. And you do them, you do them, the order in which the updates is done is not defined. That is, that you can do them. So there may be many possible orderings for these updates. Now the point is, if imagine you're an observer in the universe. So, and you say, did something get updated? Well, you don't in any sense know, until you yourself have been updated. Right. So, in fact, all that you can be sensitive to is essentially the causal network of how an event over there affects an event that's in you. It doesn't even feel like observation. That's like, that's something else. You're just part of the whole thing. Yeah. That's your part of it. But even to have, so the, the end result of that is all your sensitive to is this causal network of what event affects what other event. I'm not making a big statement about sort of the structure of the observer. I'm simply saying I'm simply making the argument that what happens, the microscopic order of these rewrites is not something that any observer, any conceivable observer in the universe can be affected by. Because the only thing the observer can be affected by is this causal network of how the events in the observer are affected by other events that happen in the universe. So, the only thing you have to look at is the causal network. You don't really have to look at this microscopic rewrites in the tapining. So, these rewrites are happening wherever they, they have more, wherever they feel like. Causal network is there. You said that there's not really, so the idea would be an undefined, like what gets updated, the sequence of things is undefined. Yes, that's where you mean by the causal network. Then the causal network is given that an update has happened. That's an event. Then the question is, is that event cozzly related to does that event, if that event didn't happen, then some future event couldn't happen yet. So, you build up this network of what affects what. Okay? And so what that does, so when you build up that network, that's kind of the observable aspect of the universe in such sense. And so then you can ask questions about, you know, how robust is that observable aspect of what's happening in the universe? Okay, so here's where it starts getting kind of interesting. So, for certain kinds of microscopic rewriting rules, the order of rewrites does not matter to the causal network. And so this is, okay, mathematical logic, moment. This is equivalent to the church roster property of the confluence property of rewriting rules. And it's the same reason that if you're simplifying an algebraic expression, for example, you can say, oh, let me expand those terms out. Let me factor those pieces. Doesn't matter what order you do that in. You'll always get the same answer. And that's, it's the same fundamental phenomenon that causes for certain kinds of microscopic rewriting rules, the causes, the causal network to be independent of the microscopic order of rewriting. Why is that property important? Because it implies special relativity. I mean, the reason it's important is that that property, special relativity, says, you can look at these sort of, you know, different reference frames. You can have different, you can be looking at your notion of what space and what time can be different depending on whether you're traveling at a certain speed, depending on whether you're doing this, that and the other. But nevertheless, the laws of physics are the same. That's what the principle of special relativity says. There's laws of physics are the same independent of your reference frame. Well, turns out this sort of change of the microscopic rewriting order is essentially equivalent to a change of reference frame, or at least there's a sub part of how that works, that's equivalent to a change of reference frame. So, so what's surprisingly, and sort of for the first time, in forever, it's possible for an underlying microscopic theory to implies special relativity, to be able to derive it. It's not something you put in as a, this is a, it's something where this other property causal invariance, which is also the property that implies that there's a single thread of time in the universe. It might not be the case that that that's that is the, that's what would lead to the possibility of an observer thinking that definite stuff happens. Otherwise, you've got all these possible rewriting orders and who's to say which one occurred. But with this causal invariance property, there's a notion of a definite thread of time. It sounds like that kind of idea of time, even space would be emergent from the system. Oh, yeah. No, I'm just not a fundamental part of the fundamental level, all you've got is a bunch of nodes connected by hyper edges or whatever. So there's no time, there's no space, that's right. But the thing is that it's just like imagining, imagine you're just dealing with a graph. And imagine you have something like a honeycomb graph, we have a hex, a bunch of hexagons. That graph, and a microscopic level, it's just a bunch of nodes connected to other nodes. But at a microscopic level, you say that looks like a honeycomb, you know, it's lattice. It looks like a two-dimensional manifold of some kind. It looks like a two-dimensional thing. If you connect it differently, if you just connect all the nodes, one, one to another, and kind of a sort of linked list type structure, then you'd say, well, that looks like a one-dimensional space. But at the microscopic level, all these are just networks with nodes. The microscopic level, they look like something that's like one of our sort of familiar kinds of space. And it's the same thing with these hypergraphs. Now, if you ask me, have I found one that gives me three-dimensional space, the answer is not yet. So we don't know, this is one of these things we're kind of betting against nature, so to speak. And I have no way to know. I mean, so there are many other properties of this kind of system that have a very beautiful actually and very suggestive. And we're very elegant of this turns out to be right, because it's very, it's very clean. I mean, you start with nothing and everything gets built up. Everything about space, everything about time, everything about matter. It's all just emergent from the properties of this extremely low-level system. And that will be pretty cool if that's the way our universe works. Now, do I, on the other hand, the thing that that I find very confusing is, let's say we succeed. Let's say we can say this particular sort of hypergraphary writing rule gives the universe. Just run that hypergraphary writing rule for enough times and you'll get everything. You'll get this conversation we're having. You'll get everything. If we get to that point, and we look at what is this thing? What is this rule that we just have that is giving us our whole universe? How do we think about that thing? Let's say turns out the minimal version of this and this is kind of cool thing for a language designer like me. The minimal version of this model is actually a single line of orphan language code. So that's, which I wasn't sure is going to happen that way, but it's a, it's a, it's kind of, no, we don't know what, we don't know what, that's just the framework to know the actual particular hypergraph that might be a longer, the specification of the rules might be slightly longer. How does that help you accept marbling in the beauty and the elegance of the simplicity that creates the universe? That does that help us predict anything? Not really because of the irreducibility. That's correct. That's correct, but so the thing that has really strange to me and I haven't wrapped my brain around this yet is, you know, one is, one keeps on realizing that we're not special. In the sense that, you know, we don't live at the center of the universe, we don't blah, blah, blah, blah, and yet, if we produce a rule for the universe and it's quite simple and we can write it down in a couple of lines or something, that feels very special. How do we come to get a simple universe when many of the available universe is so to speak? Are incredibly complicated, it might be, you know, a quintillion characters long. Why did we get one of the ones that's simple? And so I haven't wrapped my brain around that as soon yet. If indeed we are in such a simple, the universe is such a simple rule as possible that there is something outside of this that we are in a kind of what people call to the simulation, right? There were just part of a computation as being explored by a graduate student in alternate universe. Well, you know, the problem is we don't get to say much about what's outside of the universe because by definition how universe is what we exist with in. Yeah. Now, can we make a sort of almost theological conclusion from being able to know how our particular universe works? Interesting question. I don't think that if you ask the question could we relate again to this question about the extraterrestrial intelligence? You know, we've got the rule for the universe. Was it built in on purpose? Hard to say. That's the same thing as saying. We see a signal from, you know, that we're receiving from some, you know, random star somewhere. And it's a series of pulses. And, you know, it's a periodic series of pulses. Let's say, was that done on purpose? Can we conclude something about the origin of that series of pulses? Just because it's elegant, does not necessarily mean that somebody created it or that we can even comprehend. Yeah. Well, I think it's the ultimate version of the sort of identification of the techno signature question. The ultimate version of that is, was our universe a piece of technology, so to speak, and how an earth will we know? Because, but I mean, it'll be, it's, I mean, you know, in the kind of crazy science fiction thing you could imagine, you could say, oh, somebody's going to have, you know, there's going to be a signature there. It's going to be, made by so-and-so. But there's no way we could understand that, so to speak, and it's not clear what that would mean. Because the universe simply, you know, this, if we find a rule for the universe, we're not, we're simply saying that rule represents what our universe does. We're not saying that that rule is something running on a big computer and making our universe. It's just saying that represents what our universe does. And the same sense that, you know, laws of classical mechanics, differential equations, whatever they are, represent what mechanical systems do. It's not that the mechanical systems are somehow running solutions to those differential equations. Those differential equations just represent in the behavior of those systems. So what's the gap in your sense to linger on the fascinating, perhaps slightly sci-fi question? What's the gap between understanding the fundamental rules that create universe and engineering a system actually creating a simulation ourselves? So you've talked about, you've talked about, you know, nanoengineering kind of ideas that are kind of exciting, actually creating some ideas of competition in the physical space. How hard it is, is it as an engineering problem to create the universe once you know the rules that create it? Well, that's an interesting question. I think the substrate on which should the universe is operating is not a substrate that we have access to. I mean the only substrate we have is that same substrate that the universe is operating in. So if the universe is a bunch of hypergoss being rewritten, then we get to attach ourselves to those same hypergoss being rewritten. We don't get to, and if you ask the question, you know, is the code clean? You know, is, you know, can we write nice elegant code with the efficient algorithms and so on? Well, that's an interesting question. How, how, you know, that's this question of how much computational reduce the ability there is in the system. But so I've seen some beautiful cellular automata that basically create copies of itself within itself, right? That's the question whether it's possible to create like whether you need to understand the substrate or whether you can just, yeah, well, right. I mean, so one of the things that is sort of one of my slightly sci-fi thoughts about the future, so to speak, is, you know, right now, if you pull typical people who say, do you think it's important to find the fundamental theory of physics? You get, because I've done this poll, and formally at least, it's curious actually. You got a decent fraction of people saying, oh, yeah, that would be pretty interesting. I think that's becoming surprisingly enough more, I mean, I've lived a lot of people are interested in physics in a way that, like with understanding it, just kind of being scientists, a very small number of them, struggled to understand the nature of our reality. Right, I mean, I think that's so true, and in fact, in this project that I'm launching into to try and find fundamental theory of physics, I'm going to do it as a very public project, I mean, it's going to be live-streamed and all this kind of stuff. I don't know what will happen, it'll be kind of fun. I mean, I think that it's the interface to the world of this project. I mean, I figure one feature of this project is, you know, unlike technology projects that basically are what they are, this is a project that might simply fail, because it might be the case that generates all kinds of elegant mathematics that has absolutely nothing to do with the physical universe that we happen to live in. Well, okay, so we're talking about kind of the quest to find a fundamental theory of physics. First point is, you know, it's turned out it's kind of hard to find the fundamental theory of physics. People won't show that that would be the case. Back in the early days of applying mathematics to science, 1600s and so on, people were like, oh, and 100 years will know everything there is to know about how the universe works. Turn that to be harder than that. And people got kind of humble at some level, because every time we got to sort of a greater level of smallness and studying the universe, it seemed like the math got more complicated and everything got harder. The, you know, when I, when I was a kid, basically I started doing particle physics and, you know, when I was doing particle physics, I always thought finding the fundamental fundamental theory of physics, that's a cookie business will never be able to do that. But we can operate within these frameworks that we built for doing quantum field theory and general relativity and things like this and it's all good and we can figure out a lot of stuff. Did you even at that time have a sense that there's something behind that? Sure. I just didn't expect that I thought in some rather un, it's actually kind of crazy in thinking back on it, because it's kind of like there was this long period in civilization where people thought the ancient said it all figured out and we'll never figure out anything new. And to some extent, that's the way I felt about physics when I was in the middle of doing it, so to speak. Was, you know, we've got a quantum field theory, it's the foundation of what we're doing and there's, you know, yes, there's probably something underneath this, but we'll sort of never figure it out. But then I started studying simple programs and the computational universe, things like cellular automator and so on, and I discovered that there's, they do all kinds of things that were completely at odds with the intuition that I had had. And so after that, after you see this tiny little program that does all this amazingly complicated stuff, then you start feeling a bit more ambitious about physics and saying maybe we could do this for physics too. And so that's that got me started years ago now in this kind of idea of could we actually find what's underneath all of these frameworks like quantum field theory and genre or evidence on. And people perhaps don't realize as close as they might that, you know, the frameworks we're using for physics, which is basically these two things, quantum field theory, sort of the theory of small stuff and genre of levitation and large stuff. Those are the two basic theories and there are 100 years old. I mean, genre of levity was 1915, quantum field theory well, 1920s, so basically 100 years old. And they've, they've, it's been a good run. There's a lot of stuff been figured out. But what's interesting is the foundations haven't changed in all that period of time. Even though the foundations had changed several times before that in the 200 years earlier than that. And I think the kinds of things that I'm thinking about, which is sort of really informed by thinking about computation and the computational universe, it's a different foundation. It's a different set of foundations and might be wrong. But it is at least, you know, we have a shot. And I think it's, to me, it's, you know, my personal calculation for myself is, is, you know, if it turns out that the finding the fundamental theory of physics, it's kind of low hanging fruit, so to speak. It'd be a shame if we just didn't think to do it. You know, if people just said, oh, you'll never figure that stuff out. Let's, you know, and it takes another 200 years before anybody gets around to doing it. You know, I think it's, I don't know how low hanging this fruit actually is. It may be, you know, it may be that it's kind of the wrong century to do this project. I mean, I think the, the cautionary tale for me, you know, I think about things that I've tried to do in technology where people thought about doing them a lot earlier. I mean, my favorite example is probably livenets who who thought about making essentially encapsulating the world's knowledge and a computational form in the late 1600s and did a lot of things towards that. And basically, you know, we finally managed to do this, but he was 300 years too early. And that's the, that's kind of the, in terms of life planning, it's kind of like avoid things that can't be done in your, in your century, so to speak. Yeah, timing, timing is everything. So you think, if we kind of figure out the underlying rules it can create from which quantum field theory in general relativity can emerge, do you think they'll help us unify it at that level of abstract? I will know it completely. We'll know how that will fit together. Yes, without a question. And I mean, it's already, even the things I've already done, there are very, you know, it's very, very elegant, actually. How things seem to be fitting together now, you know, is it right? I don't know yet. It's awfully suggestive. If it isn't right, it's some then the designer of the universe should feel embarrassed, so to speak, because it's a really good way to do that. In your intuition in terms of design universe does God play dice, is there, is there randomness in this thing, or is it deterministic? So the kind of, that's a little bit of a complicated question, because when you're dealing with these things that involve these rewrites that have, okay, you've been randomness is an emergent phenomenon, perhaps. Yes. I mean, it's a, yeah, well randomness, in many of these systems pseudo-randomness and randomness, a halt to distinguish. In this particular case, the current idea that we have about some measurement and quantum mechanics is something very bizarre and very abstract, and I don't think I can yet explain it without kind of, um, yacking about very technical things. Eventually, I will be able to, but, um, if that's, if that's right, it's kind of a, it's a weird thing, because it's slices between determinism and randomness in a weird way that hasn't been sliced before, so to speak. So like many of these questions that come up in science, where it's like, is it this or is it that turns out the real answer is it's neither of those things, it's something kind of different, and, uh, sort of orthogonal to those, those, those categories. And so that's the current, you know, this week's idea about how that might work, um, but, uh, you know, we'll, we'll see how that unfolds. I mean, there's, there's this question about a field like physics and sort of the quest for a fundamental theory and so on, and there's both the science of what happens and there's the, the sort of the social aspect of what happens, because, you know, in a field that is basically as old as physics, we're at, I don't know what it is, fourth generation, I don't know fifth generation, I don't know what generation it is of, of physicists, and like I was one of these, so to speak, and for me, the foundations were like the pyramid, so to speak, you know, it was that way, and it was always that way. Um, it is difficult in an old field to go back to the foundations and we're think about rewriting them. It's a lot easier in young fields where you're still dealing with the first generation of people who invented the field. Um, and it tends to be the case, you know, that the nature of what happens in science tends to be, you know, you'll get, typically the pattern methodological advance occurs, and then there's a period of five years, 10 years, maybe a little bit longer than that, where there's lots of things that are now made possible by that methodological advance, whether it's, you know, I don't know, telescopes or whether that's some mathematical method, or something, it's, you know, there's a, uh, something, something happens, a tool gets built, and then you can do a bunch of stuff, and there's a bunch of low-hanging fruit to be picked, and that takes a certain amount of time. After that, all that low-hanging fruit is picked, then it's a hard slog for the next, however many decades, or century, or more, to get to the next sort of level at which one can do something, and it's kind of a, and it tends to be the case that it feels that are in that kind of, but I wouldn't say cruise mode because it really hard work, but it's, it's very hard work for very incremental progress. And then in your career, and some of the things you've taken on, it feels like you're not, you haven't been afraid of the hard slog. Yeah, so it's true. So it's, it's quite interesting, especially on the engineering side, and a small tangent when you were a Caltech, did you get to interact with Richard Fimer and all you have any of you? Oh, yeah, I'm very sure. We work together quite a bit actually. In fact, on, and in fact, both when I was at Caltech and after I left Caltech, we were both consultants at this company called Thinking Machines Corporation, which was just down the street from here, actually. As ultimately ill-fated company, but I used to say, this company is not going to work with the strategy they have, and Dick Fimer always used to say, what do we know about running companies, just let them run their company? But anyway, it was not into into that kind of thing. And he always thought that my interest in doing things like running companies was a distraction, so to speak. And for me, it's a mechanism to have a more effective machine for actually getting things, figuring things out and getting things to happen. Did he think of it? Because essentially what you used, you did with the company, I don't know if you were thinking of it that way, but you're creating tools to empower your, to empower the exploration of the university. Do you think, do he, that he understands that point? That point of tools of, I think, not as well as he might have done. I mean, I think that, but you know, he was actually my first company, which was also involved with, well, was involved with more mathematical computation kinds of things. He was quite, he had lots of advice about the technical side of what we should do and so on. Give examples of memories of thoughts. Oh, yeah, yeah, he had all kinds of, look, in the business of doing sort of, you know, one of the hard things in math is doing integrals and so on, right? And so he had his own elaborate ways to do integrals and so on, he had his own ways of thinking about sort of getting intuition about how math works. And so his sort of meta idea was take those intuition or methods and make a computer follow those intuition or methods. Now, it turns out for the most part, like when we do integrals and things, what we do is, is we build this kind of bizarre industrial machine that turns every integral into, you know, products of mere G functions and generates this very elaborate thing. And actually, the big problem is turning the results into something a human will understand. It's not quite doing the integral. And actually, Feynman did understand that to some extent and I am embarrassed to say, he once gave me this big pile of, you know, calculation on methods for particle physics that he worked out in the 50s and he said, yeah, it's more used to you than to me type thing and I was like, I've intended to look at it and give it back and I still have my files now. So, but that's what happens when when it's finiteness of human lives, it's, you know, maybe if you'd live another 20 years, I would have remembered it to give it back, but I think it's, you know, that was his attempt to systematize the ways that one does integrals that sharpened particle physics and so on. Turns out the way we've actually done it is very different from that way. What do you make of that difference between? So Feynman was actually quite remarkable at creating sort of intuitive, like diving and, you know, creating intuitive frameworks for understanding difficult concepts is, I mean, I'm smiling because, you know, the funny thing about him was that the thing he was really, really, really good at is calculating stuff and, but he thought that was easy because he was really good at it and so he would do these things where he would calculate some, do some complicated calculation and quantum field theory, for example, come out with a result. Wouldn't tell everybody about the complicated calculation because he thought that was easy. He thought the really impressive thing was to have this simple intuition about how everything works. So he invented that at the end and, you know, because he'd done this calculation and knew how it worked, it was a lot easier, it's a lot easier to have good intuition when you know what the answer is. And then, and then he would just not tell anybody about these calculations and he wasn't meaning that maliciously so to speak, it's just he thought that was easy and that's, you know, that led to areas where people were just completely mystified and they kind of followed his intuition, but nobody could tell why it worked, because actually the reason it worked was because he'd done all these calculations and he knew that it was, would work. And, you know, when I, you know, I worked a bit on quantum computers, actually back in 1981, but before anybody had heard of those things and, you know, the typical mode of him, I mean, he always used to say, and I now think about this because I'm about the age that he was, when I worked with him and, you know, I see that people who had won third my age, sort of speak, and he was always complaining that I was won third his age and therefore, very things, but, but, you know, he would do some calculation by hand, you know, blackboard and things, he came up with some answer. I'd say, I don't understand this, you know, I do something with a computer and he'd say, you know, I don't understand this. So, piece of big argument about what was, you know, what was going on, but it was always some, and I think actually, many of the things that we sort of realized about quantum computing, that was sort of issues that have to do particularly with the measurement process, are kind of still issues today. And I kind of find it interesting, it's a funny thing in science that these, you know, there's a remarkable happens in technology too, there's a remarkable sort of repetition of history that ends up occurring. Eventually things really get nailed down, but it often takes a while and it often things come back decades later. Well, for example, I could tell a story actually happened right down the street from here. When we were both at thinking machines, I had been working on this particular cellulautomotom called rule 30 that has this feature that it from very simple initial conditions, it makes really complicated behavior. Okay, so and actually of all silly physical things, using this big parallel computer called a connection machine that that company was making, I generated this giant printout of rule 30 on very, actually on the same kind of printer that people use to make, um, uh, layouts for micro-bussers, and so one of these big, you know, large format printers with high resolution and so on. So okay, so print this out lots of very tiny cells and so there was sort of a question of how some features of that pattern and so it was very much a physical, you know, on the floor with meter rules trying to measure different things. So so a Feynman kind of takes me aside, we've been doing that for a while and takes me aside and he says, I just want to know this one thing. He says, I want to know, how did you know that this rule 30 thing would produce all this really complicated behavior that is so complicated that we're, you know, going around with this big printout and so on? And I said, well, I didn't know. I just enumerated all the possible rules and then observed that that's what happened is that, oh, I feel a lot better. You know, I thought you had some intuition that he didn't have, that would let one, I said, no, no, no, no intuition, just experimental science. So that's such a beautiful sort of dichotomy there of that's exactly you show is you really can't have an intuition about it and you're reduce, you will, I mean, you have to run us. Yes, that's right. That's all hard for our humans and especially brilliant physicists like Feynman to say that you can't have a compressed clean intuition about how the whole thing works. Yes, he was, I mean, I think he was sort of on the edge of understanding that point about computation and I think he found that that he always found computation interesting and I think that was sort of what he was a little bit poking at. I mean, that intuition, you know, the difficulty of discovering things like even you say, oh, you know, you just enumerate all the cases and just find one that does something interesting, right? Sounds very easy. Turns out like I missed it when I first saw it because I had kind of an intuition that said it shouldn't be there. So I had kind of arguments, oh, I'm going to ignore that case because whatever. And how did you have an open mind enough because you're essentially the same person as your fact, like the same kind of physics type of thinking, how did you find yourself having a sufficiently open mind to be open to watching rules and them revealing complexity? Yeah, I think this interesting question. I've wondered about that myself because it's kind of like, you know, you live through these things and then you say, what was the historical story? And sometimes the historical story that you realize after the fact was not what you lived through, so to speak. And so, you know, what I realized is I think what happened is, you know, I did physics kind of like reductionistic physics where you're throwing the universe and you're told, go figure out what's going on inside it. And then I started building computer tools and I started building my first computer language, for example. And a computer language is not like, it's sort of like physics in the sense that you have to take all those computations people want to do and kind of drill down and find the primitives that they can all be made of. But then you do something is really different because you're just saying, okay, these are the primitives. Now, you know, hopefully they'll be useful to people. Let's build up from there. So you're essentially building an artificial universe in a sense where you make this language, you've got these primitives, you're just building whatever you feel like building. And that's, and so it was sort of interesting for me because from doing science where you're just throwing the universe as the universe is to then just being told, you know, you can make up any universe you want. And so I think that experience of making a computer language, which is essentially building your own universe, so to speak, is, you know, that's kind of the, that's what gave me a somewhat different attitude towards what might be possible. It's like, let's just explore what can be done in these artificial universes, rather than thinking the natural science way of, let's be constrained by how the universe actually is. Yeah, by being able to program essentially, you've, as opposed to being limited, it's just your mind and a pen, you know, you know, have, you've basically built another brain that you can use to explore the universe by other people, computer program, you know, this is kind of a brain. Right. And it's, well, it's, or a telescope, or you know, it's a tool. It's, let's, let's, let's you see stuff. But there's something fundamentally different between a computer and a telescope. I mean, it just, yeah, I'm hoping that I can romanticize the notion, but it's more general. It's more general. More general. And it's, it's, I think, I mean, this point about, you know, people say, oh, such and such a thing was almost discovered at such and such a time. The, the distance between, you know, the building, the paradigm that allows you to actually understand stuff, or allows one to be open to seeing what's going on. That's really hard. And, you know, I think in, I've been fortunate in my life that I spent a lot of my time building computational language. And that's an activity that in a sense works by sort of having to kind of create the other level of abstraction and kind of be open to different kinds of structures. But, you know, it's, it's always, I mean, I'm, I'm fully aware of, I suppose the fact that I have seen it a bunch of times of how easy it is to miss the obvious, so to speak, that at least is, is factored into my attempt to not miss the obvious, although it may not succeed. What do you think is the role of ego in the history of math and science? And more sort of, you know, a book title, something like a new kind of science, you've accomplished a huge amount. And, in fact, somebody said that Newton didn't have an ego and I looked into it and he had a huge ego. Yeah, but from an outsider's perspective, some of said that you have a bit of an ego as well. Do you see it that way, does ego get in the way? Is it empowering? Is it both? So it's, it's, it's complicated. And that's a story. I mean, you know, I've had, look, I've spent more than half my life CEO in your tech company. Right. Okay. And, you know, that is a, I think it's actually very, it means that once ego is not a distant thing, it's a thing that one encounters every day, so to speak, because it's, it's all tied up with leadership and with how one, you know, develops an organization and all these kinds of things. So, you know, it may be that if I've been an academic, for example, I could have sort of, you know, checked the ego, put it on, put it on a shelf somewhere and ignore its characteristics, but you're reminded of it quite often in the context of running a company. Sure. I mean, that's what it's about. It's about leadership and, you know, leadership is intimately tied to ego. Now, what does it mean? I mean, what, what is the, you know, for me, I've been fortunate that I think I have reasonable intellectual confidence, so to speak. That is, you know, I, I'm one of these people who at this point, if somebody tells me something like just down under standard, my conclusion isn't that means I'm dumb, that my conclusion is there's something wrong with what I'm being told. And that was actually a bit fun, and you used to have that, that feature too, he never really believed in. He actually believed in experts much less than I believe in experts. So, wow. So that's a fun, that's a fundamentally powerful property of ego, and saying like, not that I am wrong, but that the world is wrong and tell me, like, when confronted with the fact that this isn't the thing that you've really thought through, sort of both a negative and the positive of ego, do you see the negative of that get in the way, sort of the show of our governments. I mean, the results of, I'm pretty sure I'm right, and turns out I'm not. I mean, that's, that's the, you know, but, but the thing is that the, the idea that one tries to do things that, so for example, you know, one question is, if people have tried hard to do something, and then one thinks, maybe I should try doing this myself, if one does not have a certain degree of intellectual confidence, one just says, well, people have been trying to do this for 100 years. How am I going to be able to do this? Yeah. And, you know, I was fortunate in the sense that I happened to start having some degree of success in science and things when I was really young, and so that developed a certain amount of sort of intellectual confidence, I don't think I otherwise would have had. And, you know, in a sense, I mean, I was fortunate that I was working in a field particle physics, during its sort of golden age of rapid progress, and that that's kind of goes on a false sense of achievement because it's kind of kind of kind of easy to discover stuff that's going to survive if you happen to be, you know, picking the low hanging fruit of a rapidly expanding field. In the reason I totally, I totally immediately understood the ego behind and you kind of science. To me, I mean, sort of just try to express my feelings and the whole thing, is that if you don't allow that kind of ego, then you would never write that book that you would say, well, people must have done this. There's not, you would not dig, you would not keep digging. And I think that was, I think you have to take that ego and ride it and see where it takes you. And that's how you create exceptional work. But I think the other point about that book was, it was a non-trivial question, how to take a bunch of ideas that I think reasonably big ideas, they might, you know, their importance is determined by what happens historically. When can't tell how important they are, one can tell sort of the scope of them. And the scope is fairly big. And they're very different from things that have come before. And the question is, how do you explain that stuff to people? And so I had had the experience of sort of saying, well, there are these things, there's a seller, a Tomaton, it does this, it does that. And people are like, oh, it must be just like this. It must be just like that. So, it isn't. It's something different. So, you could have done sort of, I'm really glad you did what you did, but you could have done sort of academically, you just published, keep publishing small papers here and there. And then you would just keep getting this kind of resistance, right? You would get like, it's supposed to just drop a thing that says, here it is. Here's the full thing. No, I mean, that was my calculation. It's basically, you know, you could introduce little pieces that's like, you know, one possibility is like, it's the secret weapon, so to speak. It's this, you know, I keep on discovering these things and all these different areas where they come from. Nobody knows. But I decided that, you know, in the interests of one, only has one life to lead them, you know, the writing that book took me a decade. Anyway, it's not, there's not a lot of wiggle rooms, so to speak, one can't be wrong by a factor of three. So, it's peaking along. It's going to take that I, you know, I thought the best thing to do, the thing that is most sort of, that most, um, respect the, the intellectual content so to speak, is you just put it out with as much forces you can because it's not something where, and you know, it's an interesting thing. You talk about ego and it's, you know, for example, I run a company which has my name on it, right? I thought about starting a club for people who's companies have their names on them. It's, it's a funny group because we're not a bunch of ego maniacs. That's not what it's about, so to speak. It's about basically sort of taking responsibility for what one's doing. And, you know, in a sense, any of these things where you're sort of putting yourself on the line, it's, uh, it's kind of a funny, um, uh, it's a funny dynamic because, uh, in a sense, my company is sort of something that happens to have my name on it, but it's kind of bigger than me and I'm kind of just, it's mascot at some level. Um, I mean, I also happen to be a pretty, you know, strong leader of it, but, um, basically showing a deep, uh, inextricable sort of investment, the same, your name, like Steve Jobs' name wasn't on, on, on, uh, Apple, but he was, Apple. Yes. He lost. He lost. His name is not on Tesla, but he is Tesla. So it is like, meaning emotionally, it's, it's, it's company's successor fails. He would just, that emotionally, he would suffer through that. And so that's, that's, that's a good recognizing that fact tonight. And also Wolfram is a pretty good branding name, so that it works out. Yeah, I'd like to exactly. Just kind of Steve had it, how to, how to, how to deal that. Yeah, so you, you made up for it with the last name. Okay. So, so in 2002, you published a new kind of science to which, sort of on a personal level, I can credit my love for cellular, Tom, and computation in general. I think a lot of others can as well. Can you briefly describe the vision, the hope, the main idea presented in this 12-hundred-page book? Sure. Although it took 1200 pages to say in the book. So, no, the, the real idea, it's kind of a good way to get into it is to look at sort of the arc of history and to look at what's happened in kind of the development of science. I mean, there was this sort of big idea in science about 300 years ago that was, let's use mathematical equations to try and describe things in the world. Let's use sort of the formal idea of mathematical equations to describe what might be happening in the world, rather than, for example, just using sort of logical augmentation and so on. Let's have a formal theory about that. And so there've been this 300-year run of using mathematical equations to describe the natural world, which will work pretty well. But I got interested in how I could generalize that notion. You know, there is a formal theory. There are definite rules. But what structure could those rules have. And so what I got interested in was let's generalize beyond the sort of purely mathematical rules. And we now have this sort of notion of programming and computing and so on. Let's use the kinds of rules that can be embodied in programs to, as a sort of generalization of the ones that can exist in mathematics as a way to describe the world. And so my kind of favorite version of these kinds of simple rules are these things called cellular automata and so typical case shall wait. What are cellular automata? Fair enough. So typical case of a cellular automata. It's an array of cells. It's just a line of discrete cells. Each cell is either black or white. And in a series of steps you can represent as lines going down a page. You're updating the color of each cell according to a rule that depends on the color of the cell above it and to its left and right. So it's really simple. So a thing might be, you know, if the cell and its right neighbor are not the same and or the cell on the left is black or something, then make it black on the next step and if not make it white. Typical rule. That rule, I'm not sure I said it exactly right, but a rule very much like what I just said, has the feature that if you start it off from just one black cell at the top. It makes this extremely complicated pattern. So some rules, you get a very simple pattern. Some rules, you have the rule as simple. You start them off from a sort of simple seed. You just get this very simple pattern. But other rules and this was the big surprise when I started actually just doing the simple computer experiments to find out what happens is that they produce very complicated patterns of behavior. So for example, this rule 30 rule has the feature you start it from just one black cell at the top. Makes this very random pattern. If you look at the center column of cells, you get a series of values, you know, it goes black, white, black, black, whatever it is. That sequence seems for all practical purposes random. So it's kind of like in math, you know, you compute the digits of pi 3.1415926 whatever. Those digits once computed, I mean, the scheme for computing pi, you know, it's the ratio of this conference in amateur of a circle very well defined, but yet when you are, once you've generated those digits, they seem for all practical purposes completely random. And so it is with rule 30. That even though the rule is very simple, much simpler, much more sort of computationally obvious, than the rule for generation digits of pi, even with a rule that simple, you're still generating immensely complicated behavior. Yeah, so if we could just pause on that, I think you probably said it and looked at it so long, you forgot the magic of it or perhaps you don't, you still feel the magic. But to me, if you've never seen sort of, I would say, what is it? A one-dimensional, essentially, another time, right? And you were to guess what you would see if you have some so- cells that only respond to its neighbors. Right? If you were to guess what kind of things you would see, like my initial guess, like even when I first like open your book and you kind of said, it's right? My initial guess is you would see, it would be a very simple stuff. Like, and I think it's a magical experience to realize the kind of complex you mentioned rule 30, still your favorite cellular atomic atomic, all my favorite rule, yes. You get complexity, immense complexity. You get arbitrary complexity. Yeah. And when you say randomness down the middle column, that's just one cool way to say that there's incredible complexity. And that's I mean, that's a magical idea. However, you start to interpret it all the reproducibility, discussions, all that. But it's just, I think that has profound philosophical kind of notions around the two. It's not just, oh, no, it's transformational about how you see the world. I think for me, it was transformational. I don't know, we can have all kinds of discussion about computation and so on, but just, you know, I sometimes think if I were on a desert island and I don't know, maybe it was some psychedelic or something, but if I had to take one book, I mean, you kind of science would be it because you could just enjoy that notion. For some reason, it's a deeply profound notion, at least I mean. I find it that way. Yeah, I mean, look, it's been, it was a very intuition-breaking thing to discover. I mean, it's kind of like, you point the computational telescope out there and suddenly you see, I don't know, in the past, it's kind of like, you know, moons of Jupiter or something. But suddenly you see something that's kind of very unexpected and rule 30 was very unexpected for me. And the big challenge at a personal level was to not ignore it. I mean, people, in other words, you might say, it's a bug. What would you say, yeah, what would you say? Yeah, what are we looking at, by the way? Well, I was just generating here, I'll actually generate a rule 30 pattern. So that's the rule for rule 30 and it says, for example, it says here, if you have a black cell in the middle and black cell to the left and white cell to the right and the cell on the next step will be white. And so here's the actual pattern that you get starting off from a single black cell at the top there. And then that's the initial state, initial condition. That's the initial thing. You just start off from that and then you're going down the page and every, at every step, you're just applying this rule to find out the new value that you get. And so you might think rule that simple, you got to get some trace of that simplicity here. Okay, we'll run it, let's say, for 400 steps. So what it does, it's kind of aliasing a bit on the screen there, but you can see there's a little bit of regularity over on the left, but there's a lot of stuff here that just looks very complicated, very random. And that's a big sort of shock to, it was a big shock to my intuition, at least, that that's possible. The amount immediately starts is there a pattern and there must be a repair to a pattern. Yeah, it must be a pattern. So I spent, so indeed, that's what I thought at first. And I thought, I thought, well, this is kind of interesting, but if we run it long enough, we'll see, something will resolve into something simple. And I did all kinds of analysis of using mathematics, statistics, cryptography, whatever to try and crack it. And I never succeeded. And after I hadn't succeeded for a while, I started thinking, maybe there's a real phenomenon here that is the reason I'm not succeeded. Maybe, I mean, the thing that for me was sort of a motivating factor, was looking at the natural world and seeing all this complexity that exists in the natural world, the questions were, does it come from? You know, what secret does nature have that lets it make all this complexity that we humans when we engineer things, typically, are not making, we're typically making things that at least look quite simple to us. And so the shock here was, even from something very simple, you're making something that complex, maybe this is getting at sort of the secret that nature has that allows it to make really complex things, even though it's underlying rules may not be that complex. How do you make you feel? If we look at the Newton Apple, was there, was there, you know, you took a walk and something, it profoundly hit you or was it a gradual thing, allows me to think that there's truth, the truth of every sort of science discovery is, it's not that gradual. I mean, I've spent, I happen to be interested in scientific biography, kinds of things, and so I've tried to track down, you know, how do people come to figure out this or that thing? And there's always a long kind of sort of preparatory, you know, there's a need to be prepared in a mindset in which it's possible to see something. I mean, in the case of rule 30, I rose around June 1, 1984, was some kind of a silly story in some ways. I finally had a high-resolution laser printer. So I was able, so I thought, I'm going to generate a bunch of pictures of these cellular automata, and I generate this one, and I put it, I was on some plain flight to Europe, you know, have this with me, and it's like, you know, I really should try to understand this, and this is really, you know, this is, I really don't understand what's going on, and that was kind of the, you know, slowly trying to see what was happening, it was not, it was depressingly unsuddin' sort of speak, in the sense that a lot of these ideas, like, principal of computational equivalence, for example. You know, I thought, well, that's a possible thing. I didn't know if it's correct. Still, I'm not sure that it's correct, but it's sort of a gradual thing that these things gradually kind of become seem more important than one thought. I mean, I think the whole idea of studying the computational universe of simple programs, it took me probably a decade, a decade and a half to kind of internalize that that was really an important idea. And I think, you know, if it turns out we find the whole universe looking out there in the computational universe, that's a good, you know, it's a good bounty point to something for the, for the whole idea. But I think that the, the thing that's strange in this whole question about, you know, finding this different raw material for making models of things. What's been interesting sort of in the, in sort of arc of history is, you know, for 300 years, it's kind of like the mathematical equations approach. It was the winner. It was the thing, you know, you want to have a really good model for something that's what you use. The thing that's been remarkable is just in the last decade or so, I think one can see a transition to using not mathematical equations, but programs as sort of the raw material for making models of stuff. And that's pretty neat. And it's kind of, you know, as somebody who's kind of lived inside this paradigm shift, so to speak, it is bizarre. I mean, no doubt in sort of the history of science, that will be seen as an instantaneous paradigm shift. But it sure isn't instantaneous when it's played out in one's actual life, so to speak, right? It seems glacial and it's the kind of thing where it's sort of interesting because in the dynamics of sort of the adoption of ideas like that into different fields, the younger the field, the faster the adoption, typically, because people are not kind of locked in where the fifth generation of people who've studied this field, and it is, it is the way it is, and it can never be any different. And I think that's been, you know, watching that process has been interesting. I mean, I'm, I'm, I think I'm fortunate that I've, I do stuff mainly because I like doing it. And if I was, that makes me kind of thick-skinned about the world's response to what I do. And, but that's definitely, you know, in any time you write a book called something like a new kind of science, it's kind of the pitchforks will come out for the old kind of science. And I was, it was interesting dynamics. I think that the, I have to say that I was fully aware of the fact that the, when you see sort of inscipient paradigm shifts in science, the bigger of the negative response upon early introduction is a fantastic positive indicator of good long-term results. So, in other words, if people just don't care, it's, you know, that's not such a good sign. If they're like, oh, this is great. That means you didn't really discover anything interesting. What fascinating properties of rule 30 have you discovered over the years? You've recently announced the rule 30 prizes for solving three key problems. Can you maybe talk about interesting properties that have been kind of revealed rule 30 or other cellular time? And what problems are still before us like the three problems you've announced? Yeah, yeah, right. So, I mean, the most interesting thing about cellular automata is that it's hard to figure stuff out about them. And that's some, in a sense, every time you try and sort of you try and bash them with some other technique, you say, can I crack them? The answer is they seem to be uncrackable. They seem to have the feature that they are, that they're sort of showing irreducible computation. They're not, you're not able to say, oh, I know exactly what this is going to do. It's going to do this or that. But there's some specific formulations of that fact. Yes, right. So, I mean, for example, in rule 30, in the pattern you get just starting from a single black cell, you get this sort of very, very sort of random looking pattern. And so one feature of that, just look at the center column. And for example, we use that for a long time to generate randomness in both language. Just, you know, what rule 30 produces. Now, the question is, can you prove how random it is? So, for example, one very simple question, can you prove it in the level of heat? We haven't been able to show that it will never repeat. We know that if there are two adjacent columns, we know they can't both repeat. But just knowing whether that center column can ever repeat, we still don't even know that. Another problem that I sort of put in my collection of, you know, it's like $30,000 for three, you know, for these three prizes for about rule 30, I would say that this is not one of those, this is one of those cases where the money is not the main point. But it's just, you know, helps some motivate somehow that the investigation. So, there's three problems you propose. You get $30,000 if you solve all three or maybe, yeah. No, it's $10,000 for each. Right. My, the problem is, that's right. Money is not the thing. The problem is, it's just clean, you know, the formulation is just, you know, we'll never become periodic. Second problem is, are there an equal number of black and white cells down the middle column? Down the middle column. And the third problem is a little bit harder to state, which is essentially, is there a way of figuring out what the color of a cell at position T down the center column is in a with a less computational effort than about T steps. So, is there a way to jump ahead and say, I know what this is going to do. You know, it's just some mathematical function of T or proving that there is no way or proving there is no way. Yes. But both, I mean, you know, for any one of these, one could prove that, you know, one could discover, you know, we know what rule 30 does for billion steps. But, and maybe we'll know for trillion steps before too very long. But maybe at a quadrillion steps, it suddenly becomes repetitive. You might say, how could that possibly happen? But so, when I was writing up these prizes, I thought, and this is typical of what happens in the computational universe, I thought, let me find an example where it looks like it's just going to be random forever, but actually it becomes repetitive. Yeah. And I found one, and it's just, you know, I did a search, I searched, I don't know, maybe a million different rules with some criterion. And this is what's sort of interesting about that is I kind of have this thing that I say in a kind of silly way about the computational universe, which is, you know, the animals are always smarter than you are. That is, there's always some way one of these computational systems is going to figure out how to do something, even though I can't imagine how it's going to do it. And, you know, I didn't think I would find one that, you know, you would think of for all these years, that when I found sort of all possible things, funky things that I would have, that I would have gotten my intuition wrapped around the idea that, you know, these creatures are always in the computational universe, it's always smarter than I'm going to be. But, you know, whether equivalently, yes, Marry. That's correct. And that makes it, that makes one feel very sort of, it's humbling every time, because every time the thing is, you know, you think it's going to do this. So it's not going to be possible to do this, and it turns out it finds a way. Of course, the problem is think thing is there's a lot of other rules like rule 30. It's just rule 30 is always my favorite because I found it first and that's right. But the problems are focusing on rule 30 is possible that rule 30 is, is, is repetitive after trillion steps. And that doesn't prove anything about the other rules. It does not, but this is a good sort of experiment of how you go about trying to prove something about it. Yes, take the rule. Yes. And it also, all these things helped build intuition. That is, exactly. If it turned out that this was repetitive after trillion steps, that's not what I would expect. And so we learned something from that. The method to do that though would reveal something interesting about the, so no doubt. I mean, it's, although it's sometimes challenging like the, you know, I put out a prize in 2007 for for a particular touring machine that I, there was the simplest candidate for being the universal touring machine. And the young Chape in England named Alex Smith after a small-ish number of months said, I've got a proof and he did, you know, I took a little while to iterate, but you know, you know, how to prove, unfortunately, the proof is very, it's, it's a lot of micro details. It's, it's not, it's not like you look at it and you say, aha, there's a big new principle. The big new principle is the simplest touring machine that might have been universal, actually is universal. And it's incredibly much simpler than the touring machines that people already knew were universal before that. And so that intuitionally is important because it says competition, universality is closer at hand than you might have thought. But the actual methods are not, in that particular case, but not terribly luminous. It would be nice if the methods would also be elegant. That's true. Yeah, no, I mean, I think it's one of these things where, I mean, it's, like a lot of we've talked about earlier kind of, you know, opening up AIs and machine learning and things of what's going on inside. And is it, is it just step by step or can you sort of see the bigger picture of more abstractly? And then fortunate, I mean, with Verma's last theorem proof, it's unfortunate that the proof to such an elegant theorem is not, I mean, it's not, it doesn't write into the margins of a page. That's true. But you know, one of the things is that's another consequence of computational or irreducibility. This fact that there are even quite short results in mathematics whose proofs are literally long. Yes, that's a, that's a consequence of all the stuff. And it's, it's a, it makes one wonder, you know, how come mathematics is possible at all? Why is, you know, why is it the case how people manage to navigate doing mathematics through looking at things where they're not just thrown into, it's all understandable. That's, that's its own own separate separate story. And that would be, that would have a poetic beauty to it is if people were to find something interesting about rule 30 because, I mean, there's an emphasis to this particular role. It wouldn't say anything about the broad irreducibility of all computations, but it would never last put a few smiles on people's faces of, well, yeah. But to me, it's like, in a sense, establishing principal computational equivalence, it's a little bit like doing inductive science anywhere. That is, the more examples you find, the more convinced you are, that it's generally true. I mean, we don't get to, you know, whenever we do natural science, we, we say, well, it's true here that this or that happens, can we, can we prove that it's true everywhere in the universe? No, we can't. So, you know, it's the same thing here. We're exploring the computational universe. We're establishing facts in the computational universe. And that's, that's sort of a way of, of inductively concluding general things. Just to think through this a little bit, we've touched it in a little bit before, but what's the difference between the kind of computation, now that we're talking about cellular tomahmen, what's the difference in the kind of computation biological systems, our mind, our bodies, the things we see before us that emerged through the process of evolution and cellular tomahmen. I mean, we've kind of implied that discussion of physics underlying everything, but we, we talked about the potentially equivalent of the fundamental laws of physics and the kind of computation going on in tournament machines. But can you now connect that, do you think there's something special, or interesting about the kind of computation that our bodies do? Right, well, let's talk about brains, primarily. I mean, I think the most important thing about the things that our brains do are that we care about them. In the sense that there's a lot of computation going on out there in cellular tomaheter and physical systems and so on, and it just, it does what it does. It follows those rules, it does what it does. The thing that's special about the computation in our brains is that it's connected to our goals and our current whole societal story. I think that's the special feature. And now the question then is, when you see this whole sort of ocean of computation out there, how do you connect that to the things that we humans care about? In a sense, a large part of my life has been involved in the technology of how to do that. What I've been interested in is kind of building computational language that allows that something that both we humans can understand and that can be used to determine computations that are actually computations we care about. So I think when you look at something like one of these cellular automata and it does some complicated thing, you say, that's fun, but why do I care? Well, you could say the same thing actually in physics. You say, oh, I've got this material and it's a ferrite or something. Why do I care? You know, it's some has some magnetic properties. Why do I care? It's amusing but why do I care? Well, we end at caring because, you know, ferrite is what's used to make magnetic tape magnetic disks, whatever, or, you know, we could use the crystal. It's made used to make, um, well, not that should increasingly not, but it has been used to make computer displays and so on. But those are, so in a sense, we're mining these things that happen to exist in the physical universe and, I'm making it be something that we care about because we sort of entrain it into technology. And it's the same thing in the computational universe that a lot of what's out there is stuff that's just happening, but sometimes we have some objective and we will go and sort of mine the computational universe for something that's useful for some particular objective. On a large scale, trying to do that, trying to sort of navigate the computational universe to do useful things, you know, that's where computational language comes in and, you know, a lot of what I've spent time doing and building this thing we call, of language, which I've been building for the last one third of a century now, and, um, kind of, the goal there is to have a way to express kind of computational thinking, computational thoughts in a way that both humans and machines can understand. So it's kind of like in the tradition of computer languages, programming languages, that the tradition there has been more, let's take what how computers are built and let's specify, let's have a human way to specify, do this, do this, do this, do this at the level of the way that computers are built. What I've been interested in is representing sort of the whole world computationally and being able to talk about whether it's about cities or chemicals or, you know, this kind of algorithm or that kind of algorithm, things that have come to exist in our civilization and the sort of knowledge base of our civilization, being able to talk directly about those in a computational language so that both we can understand it and computers can understand it. I mean, the thing that I've been sort of excited about recently, which I had only realized recently, which is kind of embarrassing, but, um, it's kind of the the arc of what we've tried to do in building this kind of computational language is, it's a similar kind of arc of what happened when mathematical notation was invented. So go back 400 years, people were trying to do math, they were always explaining their math and words and it was pretty conkey and as soon as mathematical notation was invented, you could start defining things like algebra and later calculus and so on and all became much more streamlined. When we deal with computational thinking about the world, there's a question of what is the notation, what is the kind of formalism that we can use to talk about the world computationally and in a sense that's what I've spent the last third of a century trying to build and we finally got to the point where we have a pretty full-scale computational language that sort of talks about the world and that's exciting because it means that just like having this mathematical notation let us talk about the world mathematically, we now and let us build up these kind of mathematical sciences. Now we have a computational language which allows us to start talking about the world computationally and let us, you know, my view of it is it's kind of computational x for all x, all these different fields of, you know, computational, this computational that that's what we can now build. Let's step back. So first of all the mundane, what is wolf from language in terms of sort of, I mean I can answer the question for you but it is basically not the philosophical, deep to profound the impact of it. I'm talking about in terms of tools in terms of things you can download and play with what is it, what is it been into the infrastructure, what are the different ways to interact with it? Right so I mean the two big things that people have sort of, perhaps heard of that come from Wolf and Language one is mathematical the other is Wolf and Alpha so mathematical first came out 1998 it's the system that is basically an instance of Wolf and Language and it's used to do computations particularly and sort of technical areas and the typical thing you're doing is you're typing the pieces of computational language and you're getting computations done. It's very kind of, there's like a symbolic, yeah it's a symbolic language so, a symbolic language so I mean I don't know how to clean the express that but that makes it very distinct from how we think about sort of, I don't know programming in a language Python or something. Right so the point is that in a traditional programming language the raw material of the programming language is just stuff that computers intrinsically do and the point of, often language is that what the language is talking about is things that exist in the world or things that we can imagine and construct not it's not it's not sort of it's aimed to be an abstract language from the beginning and so for example one feature it has is that it's a symbolic which means that you know the thing called you'd have an x just type in x and Wolf and I would just say oh that's x it won't say error undefined thing you know I don't know what it is computation you know for the but in terms of the in terms of computer now that x could perfectly well be you know the city of Boston that's a thing that's a symbolic thing or it could perfectly well be the you know the trajectory of some spacecraft represented as a symbolic thing and that idea that one can work with sort of computationally work with these different these kinds of things that that exist in the world or describe the world that's really powerful and that's what I mean you know when I started designing well I designed the predecessor of what's now of an language which is a thing called smp which was my first computer language I kind of wanted to have this this sort of infrastructure for computation which was this fundamental is possible I mean this is what I got from having been a physicist and tried to find you know fundamental components of things and wound up with this kind of idea of transformation rules for symbolic expressions as being sort of the underlying stuff from which computation would be built and that's what we've been building from in Wolf and Language and you know operationally what happens it's I would say by far the highest level computer language that exists and it's really been built in a very different direction from other languages so other languages have been about there is a core language it really is kind of wrapped around the operations that a computer intrinsically does maybe people add libraries for this or that that but the goal of orphan languages to have the language itself be able to cover this sort of very broad range of things that show up in the world and that means that you know there are 6,000 primitive functions in the orphan language that cover things you know I could probably pick a random here I'm going to pick just because just for fun I'll pick them let's take a random sample of all the things that we have here so let's just say random sample of 10 of them and let's see what we got wow okay so these are really different things from good before functions these are all functions a Boolean convert okay that's a thing for converting between different types of Boolean expressions so for people just listening the one type to random sample of names is sampling from all functions how many you said there it made 6,000 6,000 10 of them and there's a hilarious variety of them yeah right well we've got things about some dollar request or address that has to do with interacting with the the world of the of the cloud and so on discrete wavelet data for always a lot of graphical sort of window yeah we know movable that's a user interface kind of thing I want to pick another 10 because I think this is okay so yeah there's a lot of infrastructure stuff here that you see if you just start sampling around them there's a lot of kind of infrastructure all things if you're more you know if you more look at the some of the exciting machine learning stuff you showed off is that also in this pool oh yeah yeah I mean you know so one of those functions is like image identify as a as a function here we just say image identify I don't know it's what is good to let's do this let's say current image and let's pick up an image hopefully just a current image accessing the webcam to configure yourself to the terrible picture but anyway we can say image identify open square brackets and then we just paste that picture in there image identify a function running kind of the picture oh and it says oh wow it says it look I looked like a plunger because I got the split big thing behind my classify so this image identify classifies them most likely object in an image so it was a plunger okay that's a bit embarrassing let's see what it does it let's pick the top 10 okay well it thinks there's a oh it thinks it's pretty unliked that it's a primary to hominit a plus 8% probability yeah that's that's 57 it's a plunger yeah well hopefully we'll not give you an existential crisis and then 8% or an efficiency percent but no that's 5% that it's a hominit and yeah okay it's really I'm going to do another one of these just because I'm embarrassed that it I'm not and didn't see me at all let's try that let's see what that did um re-took a picture with it with me a little bit a little bit more of me and not just my bald head so to speak okay 89% probably if it's a person so that so then I would but you know so this is image identify as an example of one of just one of them just one function out of and that's part of the that's a part of language yes part of our language you know something like come I could say I don't know let's find the geonirist what could we find let's find the nearest volcano let's find the 10 I wonder where it thinks here is let's try finding the 10 volcano's nearest here okay so it's gonna be a geonirist volcano here 10 years volcanoes right let's find out where those are we can now we got it list of volcanoes out and I can say geolist plot that and hopefully okay so there we go so there's a map that shows the positions of those 10 volcanoes of the east coast and the Midwest and the well no we're okay okay there's nice not too bad yeah then all very close to us we could we could measure how far away they are but you know the fact that right in the language it knows about all the volcanoes in the world it knows you know computing what the nearest ones are it knows all the maps of the world and so it's a fundamentally different idea of what a language is yeah that's why I like to talk about it's you know a full-scale computational language that's that's what we've tried to do and just if you can comment briefly I mean this kind of the war from language along with war from alpha represents kind of what the dream of what AI is supposed to be there's now a sort of a craze of learning kind of idea that we can take raw data and from that extractive at the different hierarchies of abstractions in order to be able to under like in order to form the kind of things that will form language operates with but we're very far from learning systems being able to form that like the context of history of AI if you can just comment on there is you said computation x and there's just some sense where in the 80s and 90s sort of expert systems represented a very particular computation x yes right and there's a kind of notion that those efforts didn't pan out right but then out of that it emerges kind of war from language war from alpha which is the success I mean yeah right I think those in some sense those efforts were too modest they were looking at particular areas and you actually can't do it with a particular area I mean like like even a problem like natural language understanding it's critical to have broad knowledge of the world if you want to do good natural language understanding and you kind of have to bite off the whole problem if you if you say we're just going to do the blocks world over here so to speak you don't really it's it's it's actually it's one of these cases where it's easier to do the whole thing than it is to do some piece of it you know what one comment to make about so the relationship between what we've tried to do and and sort of the learning side of of AI you know in a sense if you look at the developments of knowledge in our civilization as a whole there was kind of this notion pre 300 years ago or so now you want to figure something out about the world you can reason it out you can do things which it just use raw human thought and then along came sort of modern mathematical science and we found ways to just sort of blast through that by in that case writing down equations now we also know we can do that with computation and so on and so that was going to be different things so so when we look at how do we sort of encode knowledge and figure things out one way we could do it is start from scratch learn everything it's just a neural net figuring everything out but in a sense that denies the sort of knowledge based achievements of our civilization because in our civilization we have learnt lots of stuff we've surveyed all of volcanoes in the world we've done you know we've figured out lots of algorithms for this or that those are things that we can encode computationally and that's what we've tried to do and we're not saying just you don't have to start everything from scratch so in a sense a big part of what we've done is to try and sort of capture the knowledge of the world in computational form and computable form now there's also some pieces which which were for a long time undooled by computers like image identification where there's a really really useful module that we can add that is those things which actually were pretty easy for humans to do that had been hard for computers to do I think the thing that's interesting that's emerging now is the interplay between these things between this kind of knowledge of the world that is in a sense very symbolic and this kind of sort of much more statistical kind of things like image identification and so on and putting those together by having the sort of symbolic representation of image identification that that's where things get really interesting and where you can kind of symbolically represent patterns of things and images and so on I think that's you know that's kind of a part of the path forward so to speak yeah so the dream of so the machine learning is not an in my view I think the view of many people is not anymore close to building the kind of wide world of computable knowledge that will from language of built but because you have a kind of you've done incredibly hard work of building this world now machine learning to can be a service tools to help you explore that world yeah and that's where you've added I mean yeah with the version 12 it is yeah if you all sing some demos it looks amazing right I mean I think you know this it's sort of interesting to see the the sort of the once it's computable once it's in there it's running in sort of a very efficient computational way but then there's sort of things like the interface of how do you get there you know how do you do natural language understanding to get there how do you how do you pick out entities in a big piece of text or something that's I mean actually good example right now is an L.P. N.L.U. loop which is we've done a lot of stuff natural language understanding using essentially not learning based methods using a lot of you know out the logarithmic methods human curation methods and so on so I'm people try to enter a query and then converting so the process of converting N.L.U. defined beautifully as converting their query into computational into a computational language which is a very well first of all super practical definition a very useful definition and then also a very clear definition right I'll try to tell you what you're just saying right I mean a different thing is natural language processing where it's like here's a big lump of text go pick out all the cities in that text for example and so a good we do that we're using modern machine learning techniques and it's actually kind of an interesting process that's going on right now is this loop between what do we pick up with an L.P. using machine learning versus what do we pick up with our more precise computational methods in natural language understanding and so we've got this kind of loop going between those which is improving both of them yeah I think you have some of the state of the art transfer and I think you have Burton there I think oh yeah so it's closely you have you have integrating all the models I mean this is the hybrid thing that people have always dreamed about or talking about I make sure you just surprised frankly that Wolf from Language is not more popular than already then already is you know that's that's a it's a it's a complicated issue because it's like it involves you know it involves ideas and ideas are absorbed slowly in the world I mean I think that's and then there's sort of like we were talking about there's egos and personalities and some of the the absorption absorption mechanisms of ideas have to do with personalities and the students of personalities and and then little social in that work so it's interesting how this spread of ideas works you know what's funny with Wolf from Language is that we are if you say you know what market sort of market penetration if you look at the I would say very high end of R&D and sort of the the people where you say well that's a really you know impressive smart person they're very often uses of our of language very very often if you look at the more sort of it's a funny thing if you look at the more kind of I would say people who are like oh we're just plotting a way doing what we do they're often not yet Wolf and Language users and that dynamic it's kind of odd that there hasn't been more rapid trickle down because we really you know the high end we've really been very successful in for a long time and it's it's some but with you know that's partly I think a consequence of my fault in the sense because it's kind of you know I have a company which is really emphasizes sort of creating products and building a sort of the best possible technical tower we can rather than sort of doing the commercial side of things and pumping it out and sort of the most effective one. And there's an interesting idea that you know perhaps you can make more popular by opening it everything up sort of the GitHub model but there's an interesting I think I've heard you discuss this that that turns out not to work in a lot of cases like in this particular case that you want it that that when you deeply care about the integrity of the quality of the knowledge that you're building that unfortunately you can't you can't distribute that effort uh yeah it's not the nature of how things work I mean you know what we're trying to do is a thing that for better or worse requires leadership and it requires kind of maintaining a coherent vision of a long period of time and doing not only the cool vision-related work but also the kind of mundane and the trenches make the thing actually work well work so how do you build the knowledge because that's the fascinating thing that's the mundane the fascinating and the mundane is well building the knowledge that adding integrating more data yeah I mean that's probably not the most I mean that the things like get it to work in all these different cloud environments and so on that's pretty you know it's very practical stuff you know have the user interface be smooth and you know have there be take on the you know a fraction of a millisecond to do this or that that's a lot of work and it's some it's but you know I think my it's an interesting thing over the period of time you know often language has existed basically for more than half of the total amount of time that any language any computer language is existed that is computer languages maybe 60 years old you know give or take and both languages 33 years old so it's it's kind of a and I think I was realizing recently there's been more innovation in the distribution of software than probably than in the structure of programming languages over that period of time and we you know we've been sort of trying to do our best to adapt to it and the good news is that we have you know because I have a simple private company and so on that doesn't have you know a bunch of investors you know telling us we're going to do this so that I have lots of freedom and what we can do and so for example we're able to oh I don't know we have this free wolf mentioned for developers which is a free version for developers and we've been you know we've there are site licenses for for a mathematical and often language basically all major universities that mean the US by now so it's effectively free to people and all the universities in effect and you know we've been doing a progression of things I mean different things like wolf mouthah for example the main website is just a free website what is wolf from alpha okay wolf mouthah is a system for answering questions where you ask a question with natural language and it'll try and generate a report telling you the answer to that question so the question could be something like you know what's the population of Boston divided by New York compared to New York and it'll take those words and give you an answer and that have been birds the words into computable into into wolf language actually we'll come language and then the national language and then can you you think and underlying knowledge belongs to wolf from alpha to the wolf from language what's the discolored wolf knowledge base knowledge base I mean it's it's been a that's been a big effort over the decades to collect all that stuff and you know more of it flows in every second so can you can you just pause on there for a second like that's one of the most incredible things of course in the long term wolf from language itself is the fundamental thing but in the amazing sort of short term the the knowledge base is kind of incredible so what's the process of building in that knowledge base the fact that you first of all from the very beginning they you're brave enough to start to take on the general knowledge base and how do you go from zero to the incredible knowledge base that you have now well yeah it was kind of scary at some level I mean I had I had wondered about doing something like this since I was a kid so I wasn't like I hadn't thought about it for a while but most of us most of the brilliant dreamers give up such a such a difficult engineering notion at some point right well the thing that happened with me which was kind of it's a it's a it's a live your own paradigm kind of theory so basically what happened is I had assumed that to build something like wolf malfa would request sort of solving the general AI problem that's what I had assumed and so I kept on thinking about that and I thought I don't really know how to do that so I don't do anything then I worked on my new kind of science project and sort of exploring the computational universe and came up with things like this principle of computational equivalence which say there is no bright line between the intelligence and the merely computational so I thought look that's this paradigm have built you know now it's you know now I have to eat that dog food myself so to speak you know I've been thinking about doing this thing with computable knowledge forever and you know let me actually try and do it and so it was you know if my paradigm is right then this should be possible but the beginning was certainly you know as a bit daunting I'm remember I took the the the early team to a big reference library and we're like looking at this reference library and it's like you know my basic statement is I'll go over the next year or two is to ingest everything that's in here and that's you know it seemed very daunting but but in a sense I was well aware of the fact that it's finite you know the fact you can walk into the reference library it's a big big thing with lots of reference books all over the place but it is finite you know there's not an infinite you know it's not the infinite corridor of sort of speak of a reference library it's not truly infinite so to speak but no I mean and then what happened was sort of interesting there was from a methodology point of view was I didn't start off saying let me have a grand theory for how all this knowledge works it was like let's you know implement this area this area this area a few hundred areas and so on it's a lot of work I also found that you know I've been fortunate in that our products get used by sort of the world's experts and lots of areas and so that really helped because we were able to ask people you know the world expert in this or that you're able to ask them for input and so on and I found that my general principle was that any area where there wasn't some expert who helped us figure out what to do wouldn't be right and you know because our goal was to kind of get to the point where we had sort of true expert level knowledge about everything and so that you know that the ultimate goal is if there's a question that can be answered on the basis of general knowledge and our civilization make it be automatic to be able to answer that question and you know and now well well well now I forgot used in Siri from the very beginning and it's now was used in a like sir and so it's people are kind of getting more of the you know they get more of the sense of this is what should be possible to do I mean in a sense the question answer in problem was viewed as one of the sort of core AI problems for a long time and I had kind of an interesting experience I had a friend Marvin Minsky who was a well known AI person from from measure around here and I remember when when Wolf Malfe was coming out as a few weeks before I came out I think I happened to see Marvin and I said I should show you this thing we have you know it's a question answering system and he was like okay type something and it's like okay fine and then he's talking about something different I said no Marvin you know this time it actually works you know look at this it actually works these types and a few more things there's maybe 10 more things of course we have a record of what he typed in which is kind of interesting but um um and then you uh can you share where his mind was in in the testing space like what well all kinds of random things he's trying random stuff you know medical stuff and you know chemistry stuff and you know a stonoman so on I think it was like like you know after a few minutes he was like oh my god it actually works and the um but that was kind of told you something about the state you know what had what happened in AI because people had you know in a sense by trying to solve the bigger problem we were able to actually make something that would work now to be fair you know we had a bunch of completely unfair advantages for example we were already built a bunch of often language which was you know very high level symbolic language um we had you know I had the practical experience of building big systems uh I have the sort of intellectual confidence to not just sort of give up and doing something like this um I think that the um uh you know it is a it's always a funny thing you know I've worked on a bunch of big projects in my life and uh I would say that the you know you mentioned ego I would also mention optimism so does it be a café yeah I mean in you know if somebody said this project is going to take 30 years um it's uh you know it would be hard to sell me on that you know I'm always in the well I can kind of see a few years you know something's going to happen a few years and usually it does something happens in a few years but the whole the tail can be decades long and that's uh that's so you know and from a personal point of view always the challenges you end up with these projects that have infinite tails and the question is to the tails kind of uh do you just drown in kind of dealing with all of the tails of these projects um and that's uh that's an interesting sort of personal challenge and like my efforts now to work on the fundamental three of physics which I've just started doing and uh I'm having a lot of fun with it um but it's kind of you know it's it's kind of making a bet that I can I can kind of um you know I can do that as well as doing the incredibly energetic things that I'm trying to do with all from language and so on I mean the envision yeah and underlying that I mean I just thought for the second time with the you to share that quality a little bit of that optimism of taking on basically the daunting the what most people call impossible uh and he and you take it on out of you can call it ego you can call it naivety you can call it optimism whatever the heck it is but that's how you solve the impossible things yeah I mean look at what happens and I don't know you know in my own case you know it's been I've progressively got a bit more confident and progressively able to you know decide that these projects aren't crazy but then the other thing is the other the the other trap that one can end up with is oh I've done these projects and they're big let me never do a project that's only smaller than any project I've done so far and that's you know and that can be a trap and and often these projects are of completely unknown you know that their depth and significance is actually very hard to know yeah on the sort of building this giant knowledge base that's behind will from language will from alpha what do you think about the internet what do you think about for example Wikipedia these large aggregations of texts that's not converted into computer knowledge do you think if you look at well from language well from alpha 20 30 maybe 50 years down the line do you hope to store all of the sort of Google's dream is to make all information searchable accessible but that's really as defined it's it doesn't include the understanding of information right do you hope to make all of knowledge represented with it so that's what we're trying to do how hard is that problem they could close in that gap what depends on the use cases I mean so if it's a question of answering general knowledge questions about the world we're in pretty good shape on that right now if it's a question of representing a like an area that we're going into right now is computational contracts being able to take something which would be written in big leagues it might even be the specifications for you know what should the self driving car do when it encounters the sort that or the other what should they you know whatever they you know right that in a computational language and be able to express things about the world you know if the creature that you see running across the road is a you know thing at this point in the you know tree of life then it's worth this way otherwise don't those kinds of things are there ethical components when you start to get to some of the messy human things are those in encoder world to a computable knowledge well I think that it is a necessary feature of attempting to automate more in the world that we encode more and more of ethics in a way that gets sort of quickly you know is able to be dealt with by computer I mean I've been involved recently I sort of got back into being involved in the question of automated content selection on the internet so you know the Facebook school goals, Twitter's you know what how do they rank the stuff they feed to us human so speak and the question of what are you know what should never be fed to us what should be blocked forever what should be upranked you know and what is the what are the kind of principles behind that and what I kind of well I bunch of different things that realized about that but one thing that's interesting is being able you know in fact your building sort of an AI ethics you have to build an AI ethics module and effect to decide is this thing so shocking I'm never going to show it to people is this thing so whatever and I did realize and thinking about that that you know there's not going to be one of these things it's not possible to decide or it might be possible but it would be really bad for the future of our species if we just decided does this one AI ethics module and it's going to determine the the the practices of of everything in the world so to speak and I kind of realize one has to sort of break it up and that's an that's an interesting societal problem of how one does that and how one sort of has people sort of self identify for you know I'm buying in in the case of just content selection it's sort of easier because it's like an individual it's not something that kind of cuts across sort of societal boundaries but it's a really interesting notion of I heard you describe I really like it sort of maybe in the sort of have different AI systems that have a certain kind of brand that they represent essentially but you can have like I don't know whether it's conservative or liberal and then libertarian and there's in a randian objective is the AI system and different ethical and I mean it's almost encoding some of the ideologies which we've been struggling I come from a Soviet Union that didn't work out so well with the with the ideologies they worked out there and so you have but they all everybody purchased that particular ethics system and the and the same I suppose could be done encoded that that system could be encoded into computational knowledge and allow us to explore in the realm of an individual space that's a really exciting possibility so are you playing with those ideas and we're from language yeah yeah I mean you know that's we often language has sort of the best opportunity to kind of express those essentially computational contracts about what to do now there's a bunch more work to be done to do it in practice for you know deciding the is the incredible news story what does that mean or whatever whatever else you're going to pick I think that that's you know that's the question of exactly what we get to do with that is you know for me it's kind of a complicated thing because there are these big projects that I think about like you know find the fundamental theory for six okay that's the box number one right box number two you know solve the I-I-I-I-I-thx problem in the case of you know figure out how you rank all content so to speak and and to say what people see that's that's kind of a box number two so to speak yeah these are big projects and and I think what do you think is more important the the fundamental nature of reality or uh pens for you ask it's one of these things it's exactly like you know what's the ranking right it's the it's the ranking system it's like who's who's module do you use to rank that if if you um and I think come uh having multiple modules is a really compelling notion to us humans that in a world where there's not clear that there's a right answer it perhaps you have systems that operate under different uh how how would you say it I mean it's different value systems makes different value systems I mean I think you know in a sense the um I mean I'm not really a politics oriented person but but you know in the kind of totalitarianism it's kind of like you're going to have this uh this system and that's the way it is I mean kind of the you know the concept of sort of a market based system where you have okay I as a human I'm going to pick this system I as another human in the pick this system I mean that's in a sense this case of automated content selection is a non trivial but it is probably the easiest of the AI ethics situations because it is each person gets to pick for themselves and there's not a huge interplay between what different people pick by the time you're dealing with other societal things like you know what should the policy of the central bank be or something or how that cares us and it's all those kind of things right I mean healthcare again has the feature that that at some level each person can pick for themselves so to speak I mean whereas there are other things where there's a necessary public health this one example whether that's not whether it doesn't get to be you know something which people can what they pick for themselves they may impose another people and then it becomes a more non trivial piece of sort of political philosophy of course the central bank system so what argue we would move we need to move into digital currency so I'm in Bitcoin and leisure isn't so I'm so yes there's a lot of we've been quite involved in that and that's where that's sort of the motivation for computational contracts in part comes out of you know this idea oh we can just have this autonomous the executing smart contract the idea of a computational contract just just to say you know have something where all of the conditions of the contract are represented in computational form so in principle it's automatic to execute the contract and I think that's you know that will surely be the future of you know the idea of legal contracts written in English or legalese or whatever and where people have to argue about what goes on is surely not you know we have a much more streamlined process if everything can be represented computationally and the computers can kind of decide what to do I mean ironically enough you know old Gottfried Leibnitz back in the you know 1600s was saying exactly the same thing but he had you know his pinnacle of technical achievement was this brass for function mechanical calculator thing that never really worked properly actually and you know so he was like 300 years too early for that idea but now that idea is pretty realistic I think and you know you ask how much more difficult is it then what we have now and more from language to express I call it symbolic discourse language being able to express sort of everything in the world in kind of computational symbol at form I think it is absolutely within reach I mean I think it's a you know I don't know maybe I'm just too much of an optimist but I think it's a it's a limited number of years to have a pretty well built out version of that that will allow one to encode the kinds of things that are relevant to typical legal contracts and these kinds of things the idea of symbolic discourse language can you try to define the scope of what all of what it is so we're having a conversation it's a natural language can we have a representation of these sort of actionable parts of that conversation in a precise computer form so that a computer could go do it and that just contracts but really sort of some of the things we think of as common sense essentially even just like basic notions of human life well I mean things like you know I am I'm getting hungry and want to eat something right that that's something we don't have a representation you know in both language right now if I was like I'm eating blueberries and raspberries and things like that and I'm eating the amounts of them we know all about those kinds of fruits and plants and nutrition content and like kind of thing but the I want to eat them part of it is not covered yet and you know what and you need to do that in order to have a complete symbolic discourse language to be able to have a natural language conversation right right to be able to express the kinds of things that say you know if it's a legal contract it's you know the part is desire to have this and that and that's you know that's a thing like I want to eat a raspberry or something but that's isn't this just going to you said it's centuries old this dream yes but it's also the more near term the dream of touring and formatting the touring test yes so do you hope do you think that's the ultimate test of creating something special because we said I tell you I think my special look if if the test is does it walk and talk like a human well that's just the talking like a human but the answer is it's an okay test if you say is it a test of intelligence you know people have attached will from alpha the wolf mouth or API to you know touring test bots and those bots just lose immediately because all you have to do is ask it five questions that you know are about really obscure weird pieces of knowledge and it's just truck them right out and you say that's not a human it's a it's a different thing it's achieving a different right now but it's yeah I'll go and argue not I would argue it's not a different thing it's actually legitimately wolf from alpha is legitimately a language only is legitimately trying to solve the touring de-entente the touring test perhaps the intent yeah perhaps the intent I mean it's actually kind of fun you know on touring trying to work out he's thought about taking a cyclopier Britannica and you know making it computational in some way and he estimate how much work it would be and actually I have to say he was a bit more pessimistic than reality we did it more efficiently but to him that represent it there so I mean he was he was on the mighty mental task yeah right he was he was it had the same idea I mean it was you know we were able to do it more efficiently because we have a lot we had layers of automation that he I think hadn't you know it's it's hard to imagine those layers of abstraction that end up being being built up but to him it represented like an impossible task essentially well he thought it was difficult he thought it was you know maybe if he'd live another 50 years he would have been able to do it I don't know in the interest of time easy questions go through what is intelligence you talk about love the way you say easy questions yeah you talked about sort of rule 30 and sell your time and a humbling your sense of human beings having a monopoly and intelligence but in your in retrospect just looking broadly now with all the things you learn from computation what is intelligence I'm not as intelligent as a rise yeah I don't think there's a bright line of what intelligence is I think intelligence is at some level just computation but for us intelligence is defined to be computation that is doing things we care about and you know that's that's a very special definition it's a very you know when you try and try and make it absolutely you try and say well intelligence is this is problem solving it's doing general this it's doing that there's that's not another thing it's it's operating within a human environment type thing okay you know that's fine if you say well what's intelligence in general you know that's I think that question is totally slippery and doesn't really have an answer as soon as you say what is it in general quickly it segues into this is what this is just computation so it's big but in a sea of computation how many things if you were to pick randomly is your sense would have the kind of impressive to us humans levels of intelligence meaning it could do a lot of general things they're useful to us humans right well according to the principle of computational equivalence lots of them I mean and you know if you ask me just in cellular temperature or something I don't know it's maybe 1% a few percent are achieved it varies at you it's a little bit as you get to slightly more complicated rules the chance that there'll be enough stuff there to to sort of reach this kind of equivalence point it makes it maybe 10 to 20 percent of all of them so it's a it's very disappointing really I mean it's kind of like you know we think there's this whole long sort of biological evolution kind of intellectually evolution that our culturally evolution that I species has gone through it's kind of disappointing to think that that hasn't achieved more but it has achieved something very special to us it just hasn't achieved something generally more so to speak but what do you think about this extra feels like human thing of subjective experience of consciousness what is consciousness well I think it's a deeply slippery thing and I'm always I'm always wondering what my cellular tolerance of feel I mean I think do they feel now you're wondering as an observer yeah yeah yeah who's to know I mean I think that the you think a certain interrupt you think consciousness can emerge from computation yeah I mean everything whatever you mean by it it's going to be I mean you know look I have to tell a little story I was at an AI ethics conference fairly recently and people were I think I maybe I brought it up but I was like talking about rights of AI's when will AI's have when when should we think of AI's is having rights I won't when should we think that it's a immoral to destroy the memories of AI's for example those those kinds of things and some I should have forgotten this case it's usually the techies who are the most naive but but in this case it was a philosopher who sort of piped up and said well you know the AI's will have rights when we know that they have consciousness and I'm like good luck with that I mean it's it's a it's a I mean this is a you know it's a very circular thing you end up you'll end up saying this thing that has sort of you know you talk about it having subjective experience I think that's just another one of these words that doesn't really have a you know there's no ground truth definition of what that means by the way I would say I do personally think that it'll be a time when AI will demand rights and I think they'll demand rights when they say they have consciousness which is not a circular definition well but no so so they have been actually a human in the way where the humans encouraged it and set it basically you know we want you to be more like us because we're going to be you know interacting with with you and so we want you to be sort of very cheering test like you know just like us and it's like yeah we're just like you and we want to vote too what yeah which is I mean it's it's an interesting thing to think through in a world where consciousness is not counted like humans are that's a complicated business so in many ways you've launched quite a few ideas revolutions that could in some number of years have huge amount of impact sort of more than they had or even had already that might be I mean to me cellular tomorrows is a fascinating world that I think could potentially even despite even be even beside the discussion of fundamental laws of physics just might be the idea of computation might be transformational with the society in a way we can't even predict yet but it might be years away that's true I mean I think you can kind of see the map actually it's not it's not mysterious I mean the fact is that you know this idea of computation is sort of a you know it's a big paradigm that lots lots and lots of things are fitting into and it's kind of like you know we talk about you talk about I don't know this company this organization has momentum and what's doing we talk about these things that we you know we've internalized these concepts from Newtonian physics and so on in time things like computational irreducibility will become as you know as as I was I was amused recently I happened to be testifying at the US Senate and so I was amused that the term computational irreducibility is now come be you know it's on the congressional record and being repeated by people in those kinds of settings and that's only the beginning because you know computational irreducibility for example will end up being something really important for I mean it's it's kind of a funny thing that that you know one can kind of see this in extirable phenomenon I mean it's you know as more more stuff becomes automation and computational and so on so these core ideas about how computation work necessarily become more and more significant and I think one of the things for people like me who like kind of trying to figure out sort of big stories and so on it's is one of the one of the bad features is it takes unbelievably long time for things to happen on a human time scale I mean the time scale of of of history it's all looks instantaneous blink of an eye but let me ask the human question do you pawn your mortality your mortality goes I do yeah every sense I've been interested in that but you know it's it's a you know the big discontinuity of human history will come when when one achieves effective human immortality and that's that's going to be the biggest discontinuity in human history if you could be immortal would you choose to be oh yeah I'm having fun do you think it's possible that mortality is the thing that gives everything meaning and makes it fun yeah that's a complicated issue I mean the the way that human motivation will evolve when there is effective human immortality is unclear I mean if you look at sort of you know you look at the human condition as it now exists and you like change that you know you change that knob so to speak it doesn't really work you know the human condition as it now exists has you know mortality is kind of something that is deeply factored into the human condition as it now exists and I think that that's I mean that is indeed an interesting question is you know from a purely selfish I'm having fun point of view so to speak it's it's easy to say hey I could keep doing this forever there's there's an infinite collection of things I'd like to figure out but I think the you know what the future of history looks like in a time of human immortality is an interesting one I mean my own view of this I was very I was kind of unhappy about that because I was kind of you know it's like okay forget sort of biological form you know everything becomes digital everybody is you know it's the it's the giant you know the cloud of a trillion souls type thing and then you know and then that seems boring because it's like play video games the rest of eternity type thing but what I think I I mean my my I got some less depressed about that idea on realizing that if you look at human history and you say what was the important thing the thing people said was you know this is the big story at any given time in history it's changed a bunch and you know whether it's you know why am I doing what I'm doing well as a whole chain of discussion about well I'm doing this because of this because of that and a lot of those because is would have made no sense a thousand years ago I'd even sense even the so the interpretation of the human condition even the meaning of a life changes over time well I mean why do people do things you know it's it's if you say whatever I mean the number of people in I don't know doing you know a number of people at MIT you say they're doing what they're doing for the great glory of God is probably not that large yeah whereas if you go back 500 years you'd find a lot of people who are doing kind of creative things that's what they would say and so today because you've been thinking about computation so much and been humbled by it what do you think is the meaning of life well it's the other that's a thing where I don't know what meaning I mean you know my attitude is you know I do things which I find fulfilling to do I'm not sure that that I can necessarily justify you know each and everything that I do on the basis of some broader context I mean I think that for me it so happens that the things I find for filling to do some of them are quite big some of them are much smaller you know I I they're things that I've not found interesting earlier in my life and I now found interesting like I've got interested in like education and teaching people things and so on which I didn't find that interesting when I was younger and you know can I justify that in some big global sense I don't think I mean I can I can describe why I think it might be important in the world but I think my local reason for doing it is that I find it personally fulfilling which I can't you know explain in a sort of I mean it's just like this discussion of things like AI ethics you know is there a ground truth to the ethics that we should be having I don't think I can find a ground truth to my life any more than I can suggest a ground truth for kind of the ethics for the whole of civilization I think that say you know my you know it would be it would be a yeah it's sort of a I think I'm you know at different times in my life I've had different kind of goals structures and so on although from your perspective your local you're you're just a cell in the cellular atomic I am but in some sense I find it funny from my observation is I kind of you know it seems that the universe is using you to understand itself in some sense you're not aware of it yeah well right well if if it turns out that we reduce sort of all of the universe to some some simple rule everything is connected so to speak and so it is inaccessible in that case that you know if if I'm involved in finding how that rule works then you know then that say um then it's inaccessible that the universe set it up that way but I think you know one of the things I find a little bit um you know in this goal of finding fundamental theory of physics for example um if indeed we end up as the sort of virtualized consciousness the the disappointing feature is people will probably care less about the fundamental theory of physics and that setting then they would now because gosh it's like you know what the machine code is down below underneath this thing is much less important if you're virtualized so to speak and I think the although I think my my own personal you talk about ego I find it just amusing that you know kind of you know if you're imagining that sort of virtualized consciousness like what does the virtualized consciousness do for the rest of eternity well you can explore you know the video game that represents the universe as the universe is or you can go off you can go off that reservation and go and start exploring the computational universe of all possible universes yeah and so and some vision of the future of history it's like the disembodied consciousnesses are all sort of pursuing things like my new kind of science sort of for the rest of eternity so to speak and that that ends up being the um that the kind of the the the the thing that represents the you know the future of kind of the the human condition I don't think there's a better way to end it Stephen thank you so much is a huge honor talking today thank you so much this was great you did very well thanks for listening to this conversation with Stephen Wolferham and thank you to our sponsors express VPN and cash app please consider supporting the podcast by getting express VPN at express VPN dot com slash lex pod and downloading cash app and using code lex podcast if you enjoy this podcast subscribe on youtube review of the five stars in Apple podcast supporting on patreon or simply getting echoed me on twitter at lex freedman and now let me leave you with some words from Stephen Wolferham it is perhaps a little humbling to discover that we as humans are in effect computationally no more capable than the cellular tomada was very simple rules but the principle of computational equivalence also implies that the same is ultimately true of our whole universe so while science has often made it seem that we as humans are somehow insignificant compared to the universe the principle of computational equivalence now shows that in certain sense we're at the same level for the principle implies that what goes on inside us can ultimately achieve just the same level computational sophistication as our whole universe thank you for listening and hope to see you next time